const y=async e=>{const t=await crypto.subtle.importKey("raw",e.serverKey,{name:"HKDF"},!1,["deriveKey"]),n=await crypto.subtle.deriveKey({name:"HKDF",salt:new Uint8Array(12),info:new TextEncoder().encode("aes-gcm-shared"),hash:"SHA-256"},t,{name:"AES-GCM",length:256},!1,["encrypt"]);return{encryptedClientKey:await crypto.subtle.encrypt({name:"AES-GCM",iv:new Uint8Array(12)},n,e.clientKey)}},a=async e=>{const t=await crypto.subtle.importKey("raw",e.serverKey,{name:"HKDF"},!1,["deriveKey"]),n=await crypto.subtle.deriveKey({name:"HKDF",info:new TextEncoder().encode("aes-gcm-shared"),hash:"SHA-256",salt:new Uint8Array(12)},t,{name:"AES-GCM",length:256},!1,["decrypt"]),r=await crypto.subtle.decrypt({name:"AES-GCM",iv:new Uint8Array(12)},n,e.encryptedClientKey);return new Uint8Array(r)};export{a as d,y as e};
