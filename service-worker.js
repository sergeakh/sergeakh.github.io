const u=[{"revision":"c14f254b0f4de39f49d9d50cdb578788","url":"a/0DM8hy3d.js"},{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"95741b422f0e30e6db74d994bdedb761","url":"a/6LHWD0Ht.js"},{"revision":"6c2f09e7fd31d4c423ff7965cc4023fb","url":"a/9pUTpuOr.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"2ddf9d512067d75be13bb695460d2623","url":"a/BbR5b1VU.js"},{"revision":"d4736f49b4f7f1ee8376ac4ea9d63fe4","url":"a/BcBU6HdW.js"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"8d138613eb2d02710258fa12bc0248ac","url":"a/BP7mXCBF.js"},{"revision":"c8faf8a1eac80b61497e6761d60e23ad","url":"a/BpER6Cte.js"},{"revision":"d4d2c228aa0e5ae27e15a67d58f673da","url":"a/BQlW6EUM.js"},{"revision":"945c292f6ed38cd7cd32298b3b1cac13","url":"a/BqxBc7Lq.js"},{"revision":"5b7d02d137aa39130eb8b067077f0489","url":"a/BuZx1MVC.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"811c52e3df6418500dd91a335c630fad","url":"a/Bz2q4pzR.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"6cb84b8995c2c630b6b55e63fb76574d","url":"a/CmhYqtP3.js"},{"revision":"ade3bfa7534232e4258f4e5a0bffec0f","url":"a/CMsTAw-f.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"7188f5bcddf09b303669fe1a4240712a","url":"a/COiyh7Tp.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"1e4db7f4e7e3fc15145d150d597fab60","url":"a/CPYXH2Sk.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"1189aa5d020b5685e3c7ebdeb7061296","url":"a/CwffZA6x.js"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"4090823e23a6855db8ab15bd5304ffc1","url":"a/CzcOEp6p.js"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"180276fd91da70606922f837622f9472","url":"a/D9O9Al5x.js"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"6a77e670fd8b94619ebdd1fbbf6abda1","url":"a/DfvxFHZh.js"},{"revision":"97262d2968ce49aeb7faa1d4acef6b95","url":"a/DjHwoQtR.css"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"8fa6b8f32e99e3d01a18c339d7b1844c","url":"a/kHBiordy.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"6c5c70ec7c98d678269e5f8cdbe07c6f","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1760451595486,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
