const d=[{"revision":null,"url":"assets/ClearStore-CfCt90bD.js"},{"revision":null,"url":"assets/ClearStore-DiVqV26R.css"},{"revision":null,"url":"assets/DesktopDialog-C5Rl2lrH.css"},{"revision":null,"url":"assets/DesktopDialog-Ch0_8FSQ.js"},{"revision":null,"url":"assets/ExportData-Cqdm1vpS.css"},{"revision":null,"url":"assets/ExportData-n82gviUM.js"},{"revision":null,"url":"assets/ImportData-BkUNvFIH.js"},{"revision":null,"url":"assets/ImportData-CZGzVRRc.css"},{"revision":null,"url":"assets/index-BCEMX6-O.css"},{"revision":null,"url":"assets/index-F4UA7Zx-.js"},{"revision":null,"url":"assets/Loader-BEJh1FrK.css"},{"revision":null,"url":"assets/Loader-D1ujCXmg.js"},{"revision":null,"url":"assets/Signin-C0EeU_RY.js"},{"revision":null,"url":"assets/Signup-C8o3vNI_.js"},{"revision":null,"url":"assets/Signup-CnX7iJxK.css"},{"revision":"e237ab638d4dc45e9718fff7271fc116","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.1."+1752978697784,w=async()=>{const t=await caches.open(r);await Promise.all(d.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await w()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const u=async t=>t.match("/index.html",{ignoreSearch:!0}),m=async t=>{var h;const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=(h=n.headers.get("accept"))==null?void 0:h.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await u(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const l=await u(e);if(l)return l}throw c}};self.addEventListener("fetch",t=>{t.respondWith(m(t))});
