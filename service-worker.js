const u=[{"revision":"7aa9a252ea30455a6b0e62f0482adac6","url":"a/-Dg5Bd8d.js"},{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"53415ab1384ab40fdc51b8c4b2d975f4","url":"a/B60DwjBF.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"32142d7c341bf59c8e2d00df25ec7863","url":"a/Bq8koEnb.js"},{"revision":"498539c9008b1b2fc7c67964475dd656","url":"a/BqD5gvwi.js"},{"revision":"f8067001d8311c3e3eb9f15cd8d191b0","url":"a/BtWueawV.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"c9a5423298c048332c5c269a8c6882eb","url":"a/C22j7uhF.js"},{"revision":"3245a06f871d42504328bdfe979b92c7","url":"a/C23AgBRX.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"16fcf26cebd3d6922b1d75f2ab862834","url":"a/CfM1hMNW.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"93e9c06fc214a87d32760355b5cf1ad8","url":"a/CoL1FXV7.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"90f91db00c074608481cff44bb86d22d","url":"a/CpnZFwYC.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"afd321229bb72879c9ff81212480712d","url":"a/D_ATz_xN.js"},{"revision":"0d06cdd8e514f440bbac68db2ac7951c","url":"a/D_b9CN5M.js"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"5d68d94207780384b38228145e57cfec","url":"a/D4lU0hv5.js"},{"revision":"0e0d3074c69b36803b0aba6e51259cac","url":"a/D8xBwbrB.js"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"5850e97f04878de5837246c451907c6e","url":"a/DPq5mWxa.js"},{"revision":"d52edc0b92e67f3f2b03fd443e1896ca","url":"a/DW_SvAvV.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"75f6b1f2af202af2984350fc90f3c104","url":"a/hWCkXKsl.js"},{"revision":"7f1062fc58c727ec599d4bb95af700cb","url":"a/HzAlRY1K.js"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"b3f97c1d2a7ad4a1d7d0290b966bcbd6","url":"a/QJ3VtVHb.css"},{"revision":"b1ee1ab31708803f09950764c48896a1","url":"a/UandXPPn.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"4e0d8431319171af71a2a34883def5d8","url":"a/xFrdIaU5.js"},{"revision":"3e16faccd36b59febf96d2f198e7d2e1","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1759132788557,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
