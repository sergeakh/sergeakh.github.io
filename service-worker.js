const u=[{"revision":"e06c580c72b16d68433ccfb1613cf430","url":"a/2b6Spmau.js"},{"revision":"b989f4fb3cd932e78e2c628fed14668d","url":"a/5Ozs4zrh.js"},{"revision":"8880521184aa6f0fc02df764b53caf0e","url":"a/9foMo8sc.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"a509d06ceddb03e4f7d3b7139cf36480","url":"a/B_WuSI3X.js"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"7676d13f7ee464d79a648aafd2e90425","url":"a/B-qfT0BU.css"},{"revision":"62d618e26d57ae450122198380e963c9","url":"a/B-qJeQz1.js"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"49319b86c5049ffa0182b65814b3f3ba","url":"a/Bc6HUwTm.js"},{"revision":"f7c36262c83c499eaf439f6fc2a2821a","url":"a/BCaAILhC.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"083987c305ca828aee76237847576d57","url":"a/BM70xYRs.js"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"0227be78e2eddd0a541a00b813756d10","url":"a/C1eVIBBD.css"},{"revision":"000701ed93a223970a7311cef28b2a2c","url":"a/c9BE01tr.js"},{"revision":"9225a0564bb7b49bebf1adbb96c1ad3d","url":"a/CCtlgutt.css"},{"revision":"1934f7f1f7f60e29ace01b952de1c7d3","url":"a/CgaZeSrC.js"},{"revision":"7f4d9ffda600b4ee96001148b5946274","url":"a/ChQ2y52E.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"b8e1b072f155d330056eaa3402b6f331","url":"a/DARWQbsn.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"41d4903ed3c6a79817e2415af160690b","url":"a/DfGmfYt_.js"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"313108b8143ef19c8f7e89ef8110d7d8","url":"a/DiAwfXWl.js"},{"revision":"364bc0ce5cefd0decde6cfc6ddb8a6c0","url":"a/DJrliLk0.js"},{"revision":"ce6dafa205891fc6f0406d3ed0a89a79","url":"a/DlxBpJjD.css"},{"revision":"57a4f2e7d61589012881579d6d7af269","url":"a/DMHBZ_D7.js"},{"revision":"1e72401b35b6a4d1649d32ba9f228c45","url":"a/dPep4g6Y.js"},{"revision":"cc372e71917c16fc3827f43b78a13140","url":"a/DsX0SkbX.js"},{"revision":"85d76dc66eba1015472961dfd492aeb0","url":"a/DXMaTeuw.js"},{"revision":"c73ccce2e2b1b971a8803dec052ae116","url":"a/DZNlfyYK.css"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"eb072aa6c0f133de1e6918cce258a219","url":"a/NqthZOBJ.js"},{"revision":"6d88a2efcd5ad321fdf1e3cab7e5f525","url":"a/QOkjBNq_.js"},{"revision":"70c1a187ab126a38c8ab5215af539242","url":"a/sBOVaK3U.js"},{"revision":"35391b79680ee921731e9a8a03da6f77","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"c45f1205ae6690ef3322397c00dbdf31","url":"manifest.webmanifest"}],r="0.0.12."+1761127580949,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
