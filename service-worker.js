const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"914e5d900785bca6e8ecefecdc628716","url":"a/B_4WPOGa.css"},{"revision":"b4ff17be516885837657ce7a4718a6f1","url":"a/B_idyssL.js"},{"revision":"a12230710693a7ed484e32999d144de7","url":"a/B_kqfpeC.js"},{"revision":"7fc9dd3443354da1672638138a13600e","url":"a/BDHupy-W.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"3bd8484b7d163f3ec3ffa58b2e9cdaea","url":"a/BlQ-6iHI.css"},{"revision":"dfa27f40c5851651b65514f8645f1e41","url":"a/BlvGtidR.css"},{"revision":"f307b6dea873f9e4f21042f1678d2cad","url":"a/BN8xpILX.css"},{"revision":"65814e91e17623034167d755caf6c783","url":"a/BoD3Qa8Y.css"},{"revision":"cd50b4d8a89e03f2292eaa102e97906d","url":"a/BPTxRXZ7.js"},{"revision":"723ff34b40f41a363de8aebf50822817","url":"a/BUvhNrTJ.js"},{"revision":"3348bc045293d703e26bf03746dd6fa0","url":"a/BVeFekri.css"},{"revision":"ff444053f44c2c60c1ee561e4b2c3bd6","url":"a/C-bGXFR3.js"},{"revision":"f92c073577539fc356838ad156a77df0","url":"a/C5pMGk3u.css"},{"revision":"1b5d43dac23b8986a72fc371c0e4946f","url":"a/CBYY_xMC.js"},{"revision":"21ef607b2b27079c8d86e53b09a6a02a","url":"a/CEhxrGcN.js"},{"revision":"e35fe763d179ad764ec3dd277ddd4e2d","url":"a/CFiYe-7v.js"},{"revision":"5a5f6f2fb16155842aeb8c8dff8bb191","url":"a/CFMXavw3.css"},{"revision":"95347c98b03d7cdaba92b1ae0fc0dd1d","url":"a/CnMReuEk.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"0662d2c02b904c1fc6496e651b7fb8c2","url":"a/D2dRZn_k.js"},{"revision":"3700f60245ba33169207534658f556f3","url":"a/D2XqqPKC.js"},{"revision":"3313ad65e8c2093e133089ef64076eb4","url":"a/DAHHg6lv.css"},{"revision":"12ed5dbbd58cf04ecdf9a437fa795194","url":"a/DcVX9Be_.js"},{"revision":"020b0822fd51a0c3c09f1ef77fcbf7d9","url":"a/DfRmfh2L.css"},{"revision":"cbeb0331728596c5e2f5ae51d5042e8a","url":"a/DkTFHdRa.css"},{"revision":"fbcd7ef4fd04caea0f0ce98e60174664","url":"a/DlYwjIyC.css"},{"revision":"ac3515cbb586b8175e92dcc94e3a4939","url":"a/DMtE5168.js"},{"revision":"c4d317702fdbfa4ca5c83ddc803ff262","url":"a/Dq-CGdnI.css"},{"revision":"72af6aeadc2a1202db8d2e2d6e5023bd","url":"a/DQC_bZ0S.js"},{"revision":"8ac22a32e26b9591b531e93ac5f01267","url":"a/DUSiNlzc.css"},{"revision":"1293b2f904dea8aff3701eabffa028d6","url":"a/dx8qcWJQ.js"},{"revision":"062747e9154b495f0db763fb814d714c","url":"a/DZdNAD7E.js"},{"revision":"c45b48dfd6643f316de3a94242c9026f","url":"a/DzXekqjo.js"},{"revision":"b2f994a7e154c4f641e15b90d6eeebba","url":"a/fvMehq0a.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"268bb0f158c047b5a76e05dc11fec3dd","url":"a/QQfGH1sn.css"},{"revision":"3ef366278a753c9a28a9b6bb8db7ea7b","url":"a/vp0rLUNv.js"},{"revision":"0aed98d8d53739cdb9106527121184eb","url":"a/X1CYWSzP.js"},{"revision":"7cbb884c52ae59304d2b036689f72f15","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1758522739035,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
