const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"6cfbfad2b459708780fbd263ab641f3a","url":"a/Ad4BmONY.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"43409ea4160ec02722324a5dc9462025","url":"a/B6mHuETC.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"326b890dc482cfc5657089a35b72066e","url":"a/BNQTafNv.js"},{"revision":"0989883f4c60594d07dd5be85ad9734c","url":"a/BP_PU8A-.js"},{"revision":"83c11d6b7dab16ae519800f4ecb17a88","url":"a/BrDeNgBD.js"},{"revision":"bc2358dfac5ae34b17e0db3c9592ea65","url":"a/BV04tAHX.js"},{"revision":"c56ed0366d65ff7bd4717177a6e8ef49","url":"a/BVgeaL4L.js"},{"revision":"04688f96ec1b9f572f1da8edf4f8bd8d","url":"a/BvW9IJLM.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"8a7785f8bf3ef752a04025add6d64ce0","url":"a/C4mKuxNJ.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"ea11ae022fe5976e11392e13f65db233","url":"a/CllUqqwV.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"c3da574ed70c5d4c6325b0d9bfd91591","url":"a/D3zCwm5H.js"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"e46f0ef69e67f0b195f5aa507e4760ff","url":"a/Df_TGV5M.js"},{"revision":"092f871026939ec144be795748544507","url":"a/DKyS1BDd.js"},{"revision":"21c9a14f6e7ad7a6b7982674ccf8c9dc","url":"a/DRIF5Dt7.js"},{"revision":"8148569f0162d998dbe4fb389ae81ac3","url":"a/DtQJC0dW.js"},{"revision":"03d044dca5e70291f9a8c0bb8a648c00","url":"a/DxOiMXLY.js"},{"revision":"3f9f3b714f204b36ff105498edbb8734","url":"a/E_hOJeqD.js"},{"revision":"40a82bf0c273b0dac90aeaf8b0e88932","url":"a/fhum6Qxp.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"276eb35d138363cbdbc7a1aaebc73766","url":"a/Ki0HKa7f.js"},{"revision":"802916729f7ed3434087449944ec0f4a","url":"a/pDZ1aJ14.js"},{"revision":"b3f97c1d2a7ad4a1d7d0290b966bcbd6","url":"a/QJ3VtVHb.css"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"6e2bdb6208562f888c6bb1fcfd90b9a1","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1759134245770,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
