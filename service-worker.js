const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"0d82783ded7fd2a7cb1a5d50585863d0","url":"a/7fdDA-Cn.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"a882e812282b4242dbf522d0b6abeadd","url":"a/B3Hnte5v.js"},{"revision":"047855adafe24e1c25332056fe2c1f20","url":"a/B4Spg7Us.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"0285a0e43144082a876a5fa1f4cdfcac","url":"a/BCxIRKYN.js"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"dc8d85dfce06c9e617567b4ca566aefe","url":"a/Btu-tjhU.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"2d1d92fe236408a4966c7b7db0f3defc","url":"a/BzC_jgvC.js"},{"revision":"5ed05021c653f55954b9d393139e33fb","url":"a/BziRr7j_.js"},{"revision":"3fc8f8d5264f0f14b57400c5f76626d0","url":"a/C_g_MPpi.js"},{"revision":"3d856ae2ff5f3077b7cdac2555d1e629","url":"a/C-A2-vpF.css"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"d31277e27a1b0ff4a1d59961abe03515","url":"a/Cd8GpKb7.js"},{"revision":"dbbcc44717fbd8e59814b77bf92c1af4","url":"a/Cj49556r.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"ebafc6fa1b499ca23b4a2a0d058de6ca","url":"a/CR9Jtye5.js"},{"revision":"435966666be035e53ff46306478af8e6","url":"a/Cres6NnA.js"},{"revision":"67e18cddd093608316a29196f44c9e65","url":"a/Cto82koc.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"4fe77d3ae304e487e2bbcd272437a6b6","url":"a/D0DP2Hac.js"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"8c2e47f085ac6c5618339eb7051ebf6d","url":"a/D63iJvZx.js"},{"revision":"30bebb9e1cbfc2233a99a1aae26318de","url":"a/D6sAywue.js"},{"revision":"0a7f2c4db3b31f305cab58959ddd2c0a","url":"a/DA5gMLqu.js"},{"revision":"42a4b955bd74a5aad7fe4b4d171712f8","url":"a/DCPF5Mfp.js"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"db11d24280b64b239ecb14579ec2cbfc","url":"a/Dgweu1pu.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"8bf0114a7fa72e945cf85748e69d4684","url":"a/vIL-foVj.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"3a11c5d5281d6e5fbeaf2503765f1391","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1758855250524,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
