const w=[{"revision":"ce98ebe66855fe3fcc819e00facd18c5","url":"a/2MvHZ3CM.js"},{"revision":"beb06097327f08b60485e97eef1a9337","url":"a/3aaubBDD.js"},{"revision":"0d79f68fac516774d1d01abd17b05e09","url":"a/70bqyQ4Y.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d7b952537379d61ab805fcaaebe0a5bc","url":"a/AfrUWN1T.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"f231c98675df1ecf3e9a768a578be664","url":"a/B-xPkE1F.js"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"011f1fff92ea0b71e2814b1c000a567e","url":"a/BBfo7yxx.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"e3bbbae1a9615a0c12661001bbc97451","url":"a/BMwKOHd1.css"},{"revision":"ad2b744cc1435772152e35b1169e7d99","url":"a/Bnt_dTo-.js"},{"revision":"13cb5f39b3226a88c7a0c6cfd10cff05","url":"a/BNTSksRK.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"728d3fd89682ee4408e7268de2053039","url":"a/Bu8aH5tW.js"},{"revision":"fe1f5e859d58ce359726df7254b2a7f1","url":"a/BzEyGzYU.js"},{"revision":"2bd7cacbe334cb015f8e407cb8d32a51","url":"a/C-Mx_t1i.css"},{"revision":"a317b5d3202bf791d292fe2a466cf0d2","url":"a/C2VuNxr3.css"},{"revision":"9066f3e4e943f3be7e2f6b8862e22851","url":"a/C67bf3XE.js"},{"revision":"c0a386ef74865ff45048348fef04fecc","url":"a/C7ed26wR.js"},{"revision":"6d206e96f9e054f6d3976c0995422799","url":"a/CBDNKSaC.js"},{"revision":"da55a00306a8ff9a1d95adf9bfde3fb3","url":"a/CDiNs3fC.js"},{"revision":"07ea78a81f2a7664c98f274457dee5e1","url":"a/ChB1OqnX.js"},{"revision":"737e085c38d8480c03f059cc43e8c20e","url":"a/CJkK19aw.css"},{"revision":"ebefe3bdfd0fdac57329a8532d3a37d2","url":"a/CNYCvr-W.js"},{"revision":"9cbe3da21cd3eb8a8f0bbb0385b1b93d","url":"a/COPeEwp7.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"211ea52ff63aac93f258d2b9884cdb9d","url":"a/DJGxTJuX.css"},{"revision":"ce6dafa205891fc6f0406d3ed0a89a79","url":"a/DlxBpJjD.css"},{"revision":"dadbae2f84e97438e2c9e82e18970911","url":"a/DoivkJcU.css"},{"revision":"8bf369c31e358d8940d1a079d25ff983","url":"a/DSqWNIjs.js"},{"revision":"59f9a372acfb340d6cdceaa3df9e4a13","url":"a/DUsixbdW.js"},{"revision":"0af0ecfc2a421d34e4b42f4df5a67c9c","url":"a/DvIBgia_.js"},{"revision":"07d476b38df314b0a3f43cbf37e2f518","url":"a/DWUfwQ_G.css"},{"revision":"b310de953593690b4216aa6c57b19d4e","url":"a/DydBqRrA.js"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"b9c3499501b9a270df6cde042a7b7da9","url":"a/H1NtkrLX.js"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"eec654a7e322bdfa61e595f267a4e39f","url":"a/ijtQg1DB.js"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"845959c89eee4e3bcb0ced449c35ae1f","url":"a/SLM_nWzF.js"},{"revision":"e4d39c1af55f5ded432d0d2e7b0e2bbe","url":"a/SY7pUa9i.js"},{"revision":"6d019f0017a95edeea3f498a0099cdfe","url":"a/yyOcgMWE.js"},{"revision":"ac70712a35f767ef00b423706fb72f17","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"c45f1205ae6690ef3322397c00dbdf31","url":"manifest.webmanifest"}]||[],i="0.0.34."+1761535637350,u=async(t,e=3,s=1e3)=>{for(let a=0;a<e;a++)try{const c=await fetch(t,{cache:"no-cache"});if(!c.ok)throw new Error(`Request failed with status ${c.status}`);return}catch(c){if(a<e-1)await new Promise(n=>setTimeout(n,s));else throw c}},f=async()=>{const t=await caches.open(i);await Promise.allSettled(w.map(async e=>{if(!e||!e.url)return;const s=new URL(e.url,location.href),a=await u(s.toString());a&&await t.put(s,a.clone())}))},d=async()=>{const t=await caches.keys();await Promise.allSettled(t.map(async e=>{i!==e&&await caches.delete(e)}))};self.addEventListener("install",t=>{t.waitUntil(async()=>{const e=(await caches.keys()).length;await f(),e===0&&self.skipWaiting()})});self.addEventListener("activate",t=>{t.waitUntil(d())});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),m=async t=>{if(t.request.method!=="GET")return fetch(t.request);const e=await caches.open(i),{pathname:s}=new URL(t.request.url),a=s==="/"?"/index.html":s,c=await e.match(a,{ignoreSearch:!0});if(c)return c;const n=t.request,o=n.mode==="navigate"||n.headers.get("accept")?.includes("text/html");try{const r=await u(n.url);return r.status===404&&n.method==="GET"&&o?await l(e)||r:(r.status===200&&await e.put(n,r.clone()),r)}catch(r){if(o){const h=await l(e);if(h)return h}throw r}};self.addEventListener("fetch",t=>{t.respondWith(m(t))});
