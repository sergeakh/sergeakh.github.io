const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"844d913539b2d8da31b906ebdd5dfa5b","url":"a/5CCDlpjO.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"abbf74cccf2e8efc7755cc87a9fa809e","url":"a/B_afMx2c.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"a9bf8002a837e837ecbde86039147779","url":"a/BMIWHGVh.js"},{"revision":"64a9242832ea4a85cab341873fee71a4","url":"a/BnHyY52N.js"},{"revision":"f3e1bae55e1604e4566d90c2c42fbe1a","url":"a/BT7UdKPw.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"a9513885cf2e6053fb2dde036979b02f","url":"a/ByKiFDKt.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"95a1d92cc0fc4f116535b515d3d992ef","url":"a/CL4CAy0t.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"32530ab80e418ec67fab03ffbf64877a","url":"a/CWB3val3.js"},{"revision":"7993eedb579e104d49bb0d7f88d1180e","url":"a/CWHvvBXN.js"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"db01bf9a2fe5fb6be8e45f18155ab0e2","url":"a/CXwPGKlG.js"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"c9cdd46de727af5fbbb4c3093a4e0361","url":"a/D39tHP55.js"},{"revision":"2cc6aa57175c648a7fef5149a8c92296","url":"a/Da8bzTex.js"},{"revision":"3a4306a2b1ed02bd43e4ee3045b32854","url":"a/DBD5qf5s.js"},{"revision":"0300f615aa669fc7d45edac2bcafe1f4","url":"a/DdtNEiTc.js"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"ae086c96370aa9f7d0600e8df3a59c26","url":"a/DIxwGVrN.js"},{"revision":"8185b04d8fc5ecffc4c8f86c98782af5","url":"a/DKkyee67.js"},{"revision":"58b036efd1a663d85680687ce7cb91e5","url":"a/DrKqp_Io.js"},{"revision":"abdce09d65a22a2ed921dd40fd6faea2","url":"a/Dsmb0p7B.js"},{"revision":"d9c5838914282ec58c3bc4f052c84845","url":"a/DyDx56N_.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"b0a7005543cf3977dd5ce134cd65087a","url":"a/NgAZnP7D.js"},{"revision":"b3f97c1d2a7ad4a1d7d0290b966bcbd6","url":"a/QJ3VtVHb.css"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"2b2d9220f3d08c8f188f8e5b8c0352a9","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1759131264347,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
