const u=[{"revision":"2e419c79f34de1ef7dbc950dfd19e536","url":"a/1G7nqlhC.js"},{"revision":"aa1176220297ca7787fc16b0f38994d6","url":"a/6sUAq_xc.js"},{"revision":"0d79f68fac516774d1d01abd17b05e09","url":"a/70bqyQ4Y.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"2d952253f55efbb180ce537079d7ce07","url":"a/B2r9qYV_.js"},{"revision":"2d69665181d37a0cdf41025184795abe","url":"a/B9fxbi5W.js"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"322236c8ffafe6f205ddc477fa74d892","url":"a/BFho-HWX.js"},{"revision":"09e3b0f991c7e28e8d6ca4346fdc59bd","url":"a/BFJ6I57k.js"},{"revision":"b466a39c17c404130bdb5368ef54ec74","url":"a/BfKxx6Rm.js"},{"revision":"dd9a122110916215bbe138bb25873d77","url":"a/BGDZCCdv.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"ed427b51a273eb482505e6b0df0c7da0","url":"a/BmMGOjaN.js"},{"revision":"e3bbbae1a9615a0c12661001bbc97451","url":"a/BMwKOHd1.css"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"2bd7cacbe334cb015f8e407cb8d32a51","url":"a/C-Mx_t1i.css"},{"revision":"a317b5d3202bf791d292fe2a466cf0d2","url":"a/C2VuNxr3.css"},{"revision":"a7d11c92a4a7d55bb9c2af09161d8a07","url":"a/CDCq45is.js"},{"revision":"41bfcde81b2cff717f34be345d44cd3f","url":"a/CemO3tJc.js"},{"revision":"5e7a9e03d58220a4484452977946c714","url":"a/Chg_ZvqS.js"},{"revision":"737e085c38d8480c03f059cc43e8c20e","url":"a/CJkK19aw.css"},{"revision":"81bb86ac1baabc7a6b5b0a5111e16867","url":"a/ColH0pbS.js"},{"revision":"310446aea95e46957e3489e7bec03bc9","url":"a/CoQxinRR.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"8876c540eb955670c63ac15edbc43c64","url":"a/CrBEf87K.js"},{"revision":"8d428121de1cc8d4de8a92f1c29ce5ce","url":"a/CSlDmbIS.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"4772519f1651ba66732e48f0b82adba8","url":"a/D4ayv8TF.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"6fddcff9835e1faa6a3a19c117a11d19","url":"a/Dc9xgbAH.js"},{"revision":"0945bbc9b8c49281155e462fe712a75e","url":"a/De3koDbf.js"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"211ea52ff63aac93f258d2b9884cdb9d","url":"a/DJGxTJuX.css"},{"revision":"ce6dafa205891fc6f0406d3ed0a89a79","url":"a/DlxBpJjD.css"},{"revision":"dadbae2f84e97438e2c9e82e18970911","url":"a/DoivkJcU.css"},{"revision":"72a79c70e8161679fa887c919d607168","url":"a/DQeG3qzN.js"},{"revision":"07d476b38df314b0a3f43cbf37e2f518","url":"a/DWUfwQ_G.css"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"e86bc8ceb637992e58439bcae23eb0a9","url":"a/JIw1uaqB.js"},{"revision":"dbf646ed2a6d351fb65762ba56ebdf89","url":"a/pXm9xhq2.js"},{"revision":"1ac24f35842c30123d1de9333ceb69d1","url":"a/x-ibLGZM.js"},{"revision":"85274cdf7aa3254d760e0c009e4067d0","url":"a/xq3OYgTQ.js"},{"revision":"82ee5237f53bfe8840662757cbb81be2","url":"a/xskSa6Z1.js"},{"revision":"1b30baeeb709eee006639de94d36eb95","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"c45f1205ae6690ef3322397c00dbdf31","url":"manifest.webmanifest"}]||[],i="0.0.34."+1761538638196,f=async(t,e=3,r=1e3)=>{for(let n=0;n<e;n++)try{const a=await fetch(t,{cache:"no-cache"});if(!a.ok)throw new Error(`Request failed with status ${a.status}`);return a}catch(a){if(n<e-1)await new Promise(c=>setTimeout(c,r));else throw a}},w=async()=>{(await caches.open(i)).addAll(u.map(e=>e.url))},d=async()=>{const t=await caches.keys();await Promise.allSettled(t.map(async e=>{i!==e&&await caches.delete(e)}))};self.addEventListener("install",async()=>{const t=(await caches.keys()).length===0;await w(),t&&self.skipWaiting()});self.addEventListener("activate",async()=>{await d()});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),m=async t=>{if(t.request.method!=="GET")return fetch(t.request);const e=await caches.open(i),{pathname:r}=new URL(t.request.url),n=r==="/"?"/index.html":r,a=await e.match(n,{ignoreSearch:!0});if(a)return a;const c=t.request,o=c.mode==="navigate"||c.headers.get("accept")?.includes("text/html");try{const s=await f(c.url);return s.status===404&&c.method==="GET"&&o?await l(e)||s:(s.status===200&&await e.put(c,s.clone()),s)}catch(s){if(o){const h=await l(e);if(h)return h}throw s}};self.addEventListener("fetch",t=>{t.respondWith(m(t))});
