const u=[{"revision":"006c20f651ccb3f07c082ab8040048a7","url":"a/-efOww8n.js"},{"revision":"43860defd2236853226b5f1d4e4ca290","url":"a/0X-vq1Pt.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"1cff4eabccba87c86a634fe4e72f83bf","url":"a/B5GBhkeC.js"},{"revision":"ebe7dc22afcad4e69cec36049b706a50","url":"a/B8neLUb6.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"44be880c6b73f63d680a8431d94e81c7","url":"a/BFj6ICCK.css"},{"revision":"5b2a96ec70b7f8e393aab01725c62cab","url":"a/BgWWLGaJ.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"5cedd0256031f248240be668eacdb273","url":"a/BsvUehql.js"},{"revision":"df9cccbe004e720dc7ff8e95a4482643","url":"a/BYoGmeKB.js"},{"revision":"8485d78806fdbfa34086977187390ec8","url":"a/CG3sxpE9.js"},{"revision":"5b0ef597b94c68fc59a4f6b072396e88","url":"a/CjhdjYO4.css"},{"revision":"eb63847194f59eb2444c54da6b4cb6b2","url":"a/CLdSri1M.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"d23539dc4340b195c0c4999315aff852","url":"a/Cqj6PRJK.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"9ae159a64ebe7398e847c7f5fc2b291e","url":"a/CW9lciqi.js"},{"revision":"1dc5b2bedbfd11bd339de27ef659a622","url":"a/D5mnDQ30.css"},{"revision":"becb9e50174f7eb53ce8b3d709602861","url":"a/D5uvntjQ.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"5b3613c765222db22128f897b9ceed04","url":"a/DK88asQA.js"},{"revision":"c0e1bbcb8a6148b68206c961e82b8312","url":"a/DL04gLDy.js"},{"revision":"f7e3a787b37534252ceae9f825a7c360","url":"a/DvaEirB2.js"},{"revision":"00906376b92d18541cbc1a3fa735799a","url":"a/DwgAKYEM.js"},{"revision":"557eb56ff753652245033cb4699db4cd","url":"a/DXwpS2Qv.js"},{"revision":"6c93d9472ab7239b6308162affe19018","url":"a/Dz9AXCrV.css"},{"revision":"c5a509432d9c5518a0b9b87522f1850d","url":"a/DzzgSod-.js"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"154f03b06e35a9dfb7ae2362740c75b8","url":"a/HeYHxRB1.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"0b5c1bd17ad0d7b52e14a59785541df8","url":"a/o2mGVbTU.js"},{"revision":"2432d0f206c8bb667170059c15d625a1","url":"a/Pj66GTCL.js"},{"revision":"35621f765b22bb445128195f791172cf","url":"a/T29gp9rs.css"},{"revision":"d6a2ea2f91aee44c212ace9b32707c09","url":"a/uCtYnmsV.js"},{"revision":"708bde3622af12d2d5d3e078e996b59a","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"b25928b2827e5aa02765643eed2bb6f9","url":"manifest.webmanifest"}],r="0.0.8."+1761076462883,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
