const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"c631f228c2f89ce5cce24adf9d81d894","url":"a/7Iv7IlCY.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"59c343c2cce4f01ec485c547522eb1ec","url":"a/9QygVAVo.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"eea80da8b6bf4bb5b11d3ffd33815014","url":"a/BjcBw0dT.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"35ab7864a3670c4ca19000a41f5e1fa4","url":"a/BM6iwQlR.js"},{"revision":"7cb16be125fe4642f778bfca05a68190","url":"a/BpwtbDCk.js"},{"revision":"9460843bde773b411a1aabe06bd6aade","url":"a/BRY5IyTJ.js"},{"revision":"0d5a11780e81411e7e01c63a0e80e865","url":"a/BSdYyFOB.js"},{"revision":"b66ab621315a92d8a2df4fd4265c91a6","url":"a/BV7DfawS.js"},{"revision":"635e527ff61128202817e4a21379f2ed","url":"a/BXUBqfKd.js"},{"revision":"a2af51367810f5a4c1726d3a47fb7fdd","url":"a/bYeEfJGH.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"3c6b72650062ca9d5b6a0273a683f51e","url":"a/BYsB5EAC.css"},{"revision":"c57c50e02e9952835608408b1b2d7076","url":"a/C8sRkNG7.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"999ffcecb71cd1be2be1842f5f5ef1c0","url":"a/CLlWQUX8.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"8aaa42689ac365b3ebbfe9795e0d5817","url":"a/Cy-iG3iB.js"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"ecb773f99c9a824bdd02a5a8cbac4656","url":"a/DGlqIshA.js"},{"revision":"af46e33ea38c0b9c18a1a04146664ea9","url":"a/Dn_I4I7M.js"},{"revision":"2bd0ba5c36799f563511c41957582a3d","url":"a/Droblc97.js"},{"revision":"9ff21f79b76687fcb6ed8d7f6335d063","url":"a/DXK-K5NV.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"c628af5377d049af430d05e98c6a8f33","url":"a/lBcQLSTl.js"},{"revision":"70d3cd5b177e4d36a768f2f2849f7a60","url":"a/uQI0mhq6.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"1efb5b3102f583ddfc1fb1e0e42a7794","url":"a/y0SFeWBP.js"},{"revision":"a1aaa17b34966e912a36262c091dabe0","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1759136354105,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
