const u=[{"revision":"22afa5354450742ee575b60c2cc77ae8","url":"a/0-IAcANW.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"7676d13f7ee464d79a648aafd2e90425","url":"a/B-qfT0BU.css"},{"revision":"4babb780648b9482d85f77f66398cb0c","url":"a/B2fCpt8B.js"},{"revision":"82fd0a60c2405a5d1c5efa42e0cb83bc","url":"a/B3sx-VAP.js"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"172e2c8086733e441335f5b396eed6a8","url":"a/BiwG_a5f.js"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"05863c43ade9bd10262a8f314601f47c","url":"a/Bnuv0pmd.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"e814206a3c78948e1570ba14c92f8488","url":"a/BsSnwAMD.js"},{"revision":"a7f7e914eea1f801446ee567ad3a7073","url":"a/BvR6r2xL.js"},{"revision":"1ebee00d6c0fb2e4536bbfa53ed13f70","url":"a/BWQNFT-d.js"},{"revision":"dc09302d537c35fb328ebc6aef72ee74","url":"a/BWX7vQII.js"},{"revision":"e101ef2bbbdc838fa1e2dca0c0dbc8bd","url":"a/BxOgxGeF.js"},{"revision":"0227be78e2eddd0a541a00b813756d10","url":"a/C1eVIBBD.css"},{"revision":"5d44edfb3b990989234ec0731f6ce923","url":"a/C3RHkxG6.js"},{"revision":"9225a0564bb7b49bebf1adbb96c1ad3d","url":"a/CCtlgutt.css"},{"revision":"b95adf165ef1d884f766513e88ce23b9","url":"a/CFWM7LPk.js"},{"revision":"d3c4a9dc21565617a2f7677ba7769290","url":"a/CIlB4P2U.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"c956fdc31ab5b6f855b55e5bd9cc5126","url":"a/De1xhCAM.js"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"5fb244d377ed570561651fd998e9d358","url":"a/DqMlJMZX.js"},{"revision":"c73ccce2e2b1b971a8803dec052ae116","url":"a/DZNlfyYK.css"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"40e7ee7b6d0b429b8cced27659aad19e","url":"a/Hnu-nAc5.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"492aaea9789b1f97d9e07cfcc8e1c70f","url":"a/JCPuyZ1o.js"},{"revision":"d01890b8f3e3d060eb7596e0f202bbe8","url":"a/MlEsOrO8.js"},{"revision":"2b7db93040487383fb773b12c725dfc2","url":"a/oIbI96lS.js"},{"revision":"2c1dd463aa082b8fe4a0b338e55a085f","url":"a/wLQs7pK7.js"},{"revision":"96f81e26b60beca87e9b40fb42f7dcfd","url":"a/xuSh36mc.js"},{"revision":"c14e835263411b41910061f50a886350","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"b25928b2827e5aa02765643eed2bb6f9","url":"manifest.webmanifest"}],r="0.0.10."+1761116322384,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
