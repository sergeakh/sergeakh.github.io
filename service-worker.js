const u=[{"revision":"cafb0a6293aaeac2fe4fcd9c3127c9f1","url":"a/8Rw_-zhX.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"714b5029338b87e7a008eb67cc01be72","url":"a/B_05iaHk.js"},{"revision":"8df92a9b79096c06b46a7be6b39dcfad","url":"a/B_LOr3kX.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"5dc920c60efedaac32c7a536f9a78a05","url":"a/B3ySkiVu.css"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"fc4162403bfe2128b8b690ef9a04c994","url":"a/BCYcTWBy.js"},{"revision":"5492ba2ed02f3918b0fc7af27fcca33e","url":"a/BeqgnGPQ.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"e6371a1cf0b89c9619df219742c75db3","url":"a/BIHDRuYw.js"},{"revision":"03864cf8448e24c74e35e2c1f35fcd96","url":"a/BjCtnFwW.js"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"0421e69373831505f23d8258c20b428c","url":"a/BN2G93Qy.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"048bb214d7f582622f267a08fa2e9b77","url":"a/BT0i6Nui.js"},{"revision":"35576a05cefc0910bc83e096c1e1df7c","url":"a/C-byj8wu.js"},{"revision":"8cd6d29f0ce6556ba0513b5ada813cb4","url":"a/C5z9ZCwj.js"},{"revision":"9225a0564bb7b49bebf1adbb96c1ad3d","url":"a/CCtlgutt.css"},{"revision":"c013c385ac1e91e109070a52ac459aa4","url":"a/CDTL8L3P.js"},{"revision":"737e085c38d8480c03f059cc43e8c20e","url":"a/CJkK19aw.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"a26dd9a40767698e27bb0e27340ed474","url":"a/CV0Z_dDZ.js"},{"revision":"85c19ee833243fc00e84861e4460de27","url":"a/D78TggE5.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"9d083b3338b3749736fdd895a01d984a","url":"a/DcUy9FZZ.js"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"7c23c32d11924e2ecda312b01766fd22","url":"a/DJLU_vL6.js"},{"revision":"ce6dafa205891fc6f0406d3ed0a89a79","url":"a/DlxBpJjD.css"},{"revision":"54d4ea11d01f3f4832dd3d470f2b251a","url":"a/DQ0V8SIB.js"},{"revision":"68d65a4af968fc300a1859ad07d2d6b8","url":"a/DWxsptSF.js"},{"revision":"78ed2698393110d2a4417c079b24b77d","url":"a/DyuslC6D.js"},{"revision":"c73ccce2e2b1b971a8803dec052ae116","url":"a/DZNlfyYK.css"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"c0b827079d31c2fe600b9b2f29a04c7d","url":"a/jwsSsNeu.js"},{"revision":"1280d083f77e05a6b35a7fe3804e6d38","url":"a/QBrnmJjg.js"},{"revision":"52c02f1dfedb0df5dba23449cad088ca","url":"a/wBQODPop.css"},{"revision":"758aa1055ae4a81cb85d35fc2fb7e632","url":"a/X9VDVUNz.js"},{"revision":"15d10a4b3ef5a85117b8a773bdeedded","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"c45f1205ae6690ef3322397c00dbdf31","url":"manifest.webmanifest"}],r="0.0.26."+1761298995525,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
