const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"16f93ae41698291f48f59f1c8d1849b1","url":"a/1xIvmOq3.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"ebe7dc22afcad4e69cec36049b706a50","url":"a/B8neLUb6.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"62e407a355134df57bcef422b9c8d68f","url":"a/BG-JZHmb.css"},{"revision":"88a29cc394b8ea0b7e41357e48c42277","url":"a/BGA9MGvU.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"3808538b80e4a9a57cc527e598a779f3","url":"a/BL5iVsYA.js"},{"revision":"1992627b17b6a9a072478ae728d18238","url":"a/BnwJRbJL.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"bedd84ccd098251bd662c2a6a15e96ee","url":"a/BTtUkV_W.css"},{"revision":"b548d0ee615bc0360ea15933f8ece510","url":"a/Ce5P0Y_4.js"},{"revision":"aaaf586aad95851036090896e020c95b","url":"a/CiiUxlZu.js"},{"revision":"5b0ef597b94c68fc59a4f6b072396e88","url":"a/CjhdjYO4.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"3760c5228e4304a938adb962bcf2bf69","url":"a/CydoLJqW.js"},{"revision":"d4f899640cf1f23dce3c655a05bb2cbb","url":"a/D_cAHKpr.js"},{"revision":"1dc5b2bedbfd11bd339de27ef659a622","url":"a/D5mnDQ30.css"},{"revision":"0e660014e30bf143b2925e849b0815f0","url":"a/D9yh0xnD.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"1260bf05f266dca466d7e70fb9d2fd6d","url":"a/DDAVkURJ.js"},{"revision":"77a32625d9fc9867fcc51e88fc72a4b8","url":"a/DEvy0Gvj.js"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"3b6bbb611f87d1bdb5c4cdaca62705ee","url":"a/Dm91YsYD.js"},{"revision":"c78d59a299db72c4b60bb6d1d9489101","url":"a/DNdBBv3I.js"},{"revision":"4e276534819e682da12bbcb1704168a5","url":"a/doHZmXOy.js"},{"revision":"ed45a3552a3d3a5f97eb20b5395e96c9","url":"a/DpoYfRtx.js"},{"revision":"fa02144cf3e132cf13339893b89a110b","url":"a/DUllpDvw.js"},{"revision":"07d476b38df314b0a3f43cbf37e2f518","url":"a/DWUfwQ_G.css"},{"revision":"6c93d9472ab7239b6308162affe19018","url":"a/Dz9AXCrV.css"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"e87d979a1697ae27f0c1881d6f10dd7a","url":"a/GjzE6XPF.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"0723bf33c9f18902bf8edb9aaab82084","url":"a/lL-ihTp5.js"},{"revision":"dcd2c69027d2bc2e1e6906ed5b31b02c","url":"a/pQTflqHU.js"},{"revision":"84da2beb70a089b5b75842f25136b9c3","url":"a/QTNigSHR.js"},{"revision":"5cdc62d2c32e749dcdeb559772425729","url":"a/vKJ9tOsO.js"},{"revision":"bdd3147b947c25a4246d9969df0ed64a","url":"a/wh5UaPLm.js"},{"revision":"9327b1e9e7f13a4d7de190a86be94165","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.5."+1761003068364,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
