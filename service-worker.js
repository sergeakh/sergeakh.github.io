const u=[{"revision":"525ef7e39c45ee81c91f91478801b646","url":"a/15DvcxGc.js"},{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"af1f0d550af845e458d4e1bfe6543828","url":"a/1VLjDs9A.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"1d6f9c3f878da5f0a62f0a96a8c448a9","url":"a/B_taRV4z.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"f84ccd4e745fea1e209c65ef8c580093","url":"a/B-1Q_gwR.js"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"f7ed33141355b7e5adc762b5bc57e1c6","url":"a/BFheD3tY.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"6a0ecc94556828aca29a55829b6075b9","url":"a/BUQNMgSc.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"9d2f97021b7bf55b87a821987215d9a8","url":"a/BZWeSm25.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"0f2c516e81371493e81bd0cc73c11047","url":"a/CN3PhDk-.js"},{"revision":"e6b74cc4440936eabed352ade301eed0","url":"a/CnYs51br.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"8f63bc1058956368380049110131b70c","url":"a/CwbH8yhI.js"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"f4f2540aa087bbf2dd65ca413b271320","url":"a/CZ1Tatuc.js"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"a5861092a6d25122c19f0d91b3586ad2","url":"a/D94e5Wzq.css"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"176a9c754c347fd015a761077f24e892","url":"a/DuDXbm5F.js"},{"revision":"945ac518b843c39e0ae2a4e543b57af4","url":"a/Dw96YpD4.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"bf6febd9928c3b9146ba8612eab47342","url":"a/IcOsY5fI.js"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"c81faf9289e627873bd9d0a28c46733a","url":"a/kwppeepD.js"},{"revision":"f4044e973936ef512089da1cf10de11b","url":"a/LwksKAlP.js"},{"revision":"9bbb6fdda8f9ecdaf87cb3467526543e","url":"a/pFeQi5Z5.js"},{"revision":"17712f4d5fda68fe7ff2ec8793926dad","url":"a/q18yXHou.js"},{"revision":"cb2316b3ac9fce92bc7e612b01ead83e","url":"a/tsATMHQc.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"f5cb7704c202f7f647211f705e732dfd","url":"a/ZL2xFL79.js"},{"revision":"3f13382c55553395fef2e2309b2f0e9f","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1758619035232,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
