const u=[{"revision":"7d3b1f87c1b8c45f92c920e2e5104c07","url":"a/1JBhEcUe.js"},{"revision":"29007edccde6555d4dded1e9d758539c","url":"a/4dBm2ygp.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d5d1bfca3f11462b4523d4403b402dcc","url":"a/Avi5BOlC.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"7676d13f7ee464d79a648aafd2e90425","url":"a/B-qfT0BU.css"},{"revision":"78a20c1cfd0ffe134a8f6f035b149e9c","url":"a/B7R7HF6d.js"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"3a96be88493227f1c6f0a8912c526e79","url":"a/BibiOZHP.js"},{"revision":"c6c2ae1f99b5f6fa922ba57239f4408b","url":"a/Bm7prLoF.js"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"48804ecae8feb185bf0e641436945b5d","url":"a/BQzhFTJ5.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"bef54cccd518beceaab36d5fc64d4d9c","url":"a/BTmsvBuI.js"},{"revision":"0227be78e2eddd0a541a00b813756d10","url":"a/C1eVIBBD.css"},{"revision":"9225a0564bb7b49bebf1adbb96c1ad3d","url":"a/CCtlgutt.css"},{"revision":"b80d99ab2ac720e0dd697982fa0aa2b7","url":"a/CH1R1ms0.js"},{"revision":"c9be9d49abcc7e8a7e2d457262b5e1cb","url":"a/CoQ0T6uh.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"3ebf6572d6a6565cd52cf06a590bd362","url":"a/CSEYpqN7.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"0f0989f60bd87f50ab258cbd13bef456","url":"a/D-gpXDRt.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"6cb1970319826589a4710850b2b29d70","url":"a/DqQpxAU2.js"},{"revision":"2dc007b4a90d199844c4e69f9caad67a","url":"a/DqXWJcFR.js"},{"revision":"5f1f214fdf1d422c9478b4e4ac2cb9bf","url":"a/DvVJq8Ou.js"},{"revision":"aded7e41140269a3e2149b6867e05dbb","url":"a/DxSTX5Hx.js"},{"revision":"c73ccce2e2b1b971a8803dec052ae116","url":"a/DZNlfyYK.css"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"620686bf7fd2b0e23b1de86608285cc3","url":"a/ILmNg1W7.js"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"24a0b8608307541bb5b4281d3863cbba","url":"a/k3mwr6jb.js"},{"revision":"49b93f429da5e94165582d9b4c9ca42f","url":"a/u7d3MoF4.js"},{"revision":"6e7c8e1a7fd0a6545690320d55534052","url":"a/uTvrPdHK.js"},{"revision":"4eefa530433633e10edcbee0f646321c","url":"a/XT7QpfIy.js"},{"revision":"3805c18e9b656b3cfdc77b4fdf4df68d","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"b25928b2827e5aa02765643eed2bb6f9","url":"manifest.webmanifest"}],r="0.0.11."+1761117455722,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
