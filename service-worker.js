const u=[{"revision":"04a72e9df3f9eff81bc6e88fc0e7ce50","url":"a/8QjSR869.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"a8a50529aaa803e27192b9574f095c5f","url":"a/B-I1heiU.js"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"d585228d4d4bede0d12d8b7733f59471","url":"a/BCECFNOE.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"d57836c9e80b537e2560849fab2a8dcb","url":"a/BJ0CJs2d.js"},{"revision":"5e9e2d76ad383657d372a452bad0256c","url":"a/BJ5p1-w_.js"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"53f956905052b0967c1186e78fb829f3","url":"a/BmvQTbrL.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"6e13b18738cab5eea984b012cefbe38c","url":"a/BT33Le6T.js"},{"revision":"fd077cdd5faa26877eeb7f064e33acdf","url":"a/BUXdr2rG.js"},{"revision":"4e37ae5c37584126a086d34511906fe5","url":"a/C_3n6usn.js"},{"revision":"0227be78e2eddd0a541a00b813756d10","url":"a/C1eVIBBD.css"},{"revision":"9225a0564bb7b49bebf1adbb96c1ad3d","url":"a/CCtlgutt.css"},{"revision":"737e085c38d8480c03f059cc43e8c20e","url":"a/CJkK19aw.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"9a3aecad4b78dcf1067652bb2e6752c3","url":"a/CQi_yAXr.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"a6e1687108e289ce0da0bf305c59c561","url":"a/D-bhpQ2Y.js"},{"revision":"6caf30f6f4fa349113c2b0605f5ccaba","url":"a/D2qofvHc.js"},{"revision":"07ad1c05cc0cca7e18a378f8b35ba3d5","url":"a/D72WqxBe.js"},{"revision":"fe7c33b183f63db8ad55237856e38802","url":"a/D8PY4Uz_.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"dd8d1f9053091941d66e87ff731258f5","url":"a/DE3AjXNQ.js"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"d6f78d6f954e587ebc15e15df77b5572","url":"a/DHWHZJHP.js"},{"revision":"ce6dafa205891fc6f0406d3ed0a89a79","url":"a/DlxBpJjD.css"},{"revision":"c4dbe1c0d3ad4cae9cbb16dd1e6564aa","url":"a/DqbU2qCu.js"},{"revision":"9d32138588d954f18136df6e7fe02e22","url":"a/DVodxaAZ.js"},{"revision":"8e711e2dcb8ee7c706f6467d36256346","url":"a/DYUL50sD.js"},{"revision":"c73ccce2e2b1b971a8803dec052ae116","url":"a/DZNlfyYK.css"},{"revision":"4c1185321c373470a421713e7bf3ffb2","url":"a/DzQaaJjs.js"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"362229f1afaa74b96f9da10734fc638a","url":"a/MQs19lZT.js"},{"revision":"8ca0a1fc1fd0551b680351f90bcb78dd","url":"a/xsh8vbVf.js"},{"revision":"bae5da8e15e8b6c8d0b366cc07aa8596","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"c45f1205ae6690ef3322397c00dbdf31","url":"manifest.webmanifest"}],r="0.0.22."+1761181802068,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
