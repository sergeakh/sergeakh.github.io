const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"31d5cb1d492cd9b452bc6059c6392032","url":"a/65Yo8fmo.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"15cc3420918bb35eece1997800e7b385","url":"a/9qxG7YRw.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"e6642f4929046729e8d96dd4013b040a","url":"a/BcDwTKGf.js"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"fc81aeb38a970c0848b8728c19dd7921","url":"a/BqTMGlwo.js"},{"revision":"8bbc75a652a9cb64168d0ce53b77d166","url":"a/BVYC0pdq.js"},{"revision":"745a5057ecc588fa6fc9c0ef0c42d673","url":"a/BWKbJtwS.js"},{"revision":"968f42648dec308be9ab7f62ef99ea37","url":"a/BX7hmKmV.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"6d63c1f6f330877d5c60c3ff35683fcd","url":"a/C3hnXqEa.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"9a09bd30e512481ef8863130781cc4ff","url":"a/CDsjfWm6.js"},{"revision":"5b127550096fb5e37b2260db8343e545","url":"a/CDZDVT5j.js"},{"revision":"cce25846653d7c48cffa9d8083ff492d","url":"a/ciWORmH5.js"},{"revision":"769421eb70b734ef9a466f3fde86d85b","url":"a/Cj_S1z1h.js"},{"revision":"5a9cc2e29fca8d3956bf1715134cc428","url":"a/CO4GCWOZ.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"d2b0e4b822962b823c5763ac6056fc52","url":"a/D-3O2fFD.js"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"9ebea9d36daf05ffe5547b3aaf813521","url":"a/D7yH296E.css"},{"revision":"e3d147d03614999a3c77f6fb0297638b","url":"a/DAjxd5Ox.js"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"e57d39976a9371de17bfe86416a475e6","url":"a/DhVhR7xG.js"},{"revision":"e2e4bdafb3006ed38e43c915e7631ece","url":"a/Duq-6s-C.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"f894ac9df109f0d46cc738c21330ed19","url":"a/hqbG7AFL.js"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"1251c3f352c0a60b2291b9c097e9f206","url":"a/x77yeWG9.js"},{"revision":"c5e576545cbdcd8af6de1ed29744ed89","url":"a/Xtv8-TUt.js"},{"revision":"0d25594322a9fd75aca4cd4349e0226a","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1759490850358,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
