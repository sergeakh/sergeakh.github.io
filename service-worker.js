const u=[{"revision":"769b492ddfdb6411e4e7bfb50c509fc5","url":"a/0_fQDin0.js"},{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"3154ea733f005a910284b39936aba0c1","url":"a/B9M0okLN.js"},{"revision":"f64ed7568bfe8ef1850bf432cf92fc5f","url":"a/B9VeUoKw.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"34593216ec7575b13d98b57ada9add11","url":"a/BbekH15Z.js"},{"revision":"d58e06fd8961ef5864ba2df3846b86d9","url":"a/BCsKuIMb.js"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"42054db9606c44a6f4561008db79603c","url":"a/BhXiMg2M.js"},{"revision":"bf0b8bd9cb0e6aa428b85eaa71bf443a","url":"a/BIAka0un.css"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"a917028d69f18d1d2c061c66d648f6b8","url":"a/Bm0_2pnm.js"},{"revision":"959c2169e59383cbedd4fc7b30f008fe","url":"a/BP9Ll-gD.js"},{"revision":"bdf32c530b8871cbe5dfa81932126be2","url":"a/BqEa19Jf.js"},{"revision":"b94a4b97c5713d0949e26b7b800ac97e","url":"a/Bv2ocV67.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"4492a6ab009df004a71651bed42e44f2","url":"a/BYLsI1aE.js"},{"revision":"b102f5c35a2de2f8882371a16b194fa7","url":"a/C8xmMaG3.js"},{"revision":"ae899d49f0d7894b1a0564470c57a54f","url":"a/CaA-3DG-.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"8896455a21f3f8db302fe3e14eb31f28","url":"a/CHHK59cT.js"},{"revision":"66f11d554857cfec0bf4cb83a6bdd706","url":"a/Ckpb1fdh.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"dbf355c450ed16879d328739868c2780","url":"a/DDz67Cht.js"},{"revision":"020b0822fd51a0c3c09f1ef77fcbf7d9","url":"a/DfRmfh2L.css"},{"revision":"f80d22b9a33f901ae359b6145f3b7d04","url":"a/DMKohntk.js"},{"revision":"44170a5617feded11cdf647a98e7b99d","url":"a/DmN3pgfk.js"},{"revision":"f8a51f15bde0ce3a46c561fd1a5ea91a","url":"a/DPVMsAjd.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"14972545ca7be91e6ccbed825f2e575a","url":"a/q5gh-AzR.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"164f3a41b6c3996c8f9abb90dd8b98a5","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1758542038434,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
