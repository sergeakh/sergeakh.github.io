const u=[{"revision":"b18fdc92571da29fa784e7664026165e","url":"a/0fu9QP6Z.js"},{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"9e04cb382cfd4ddfe47bc8615925ab43","url":"a/B-cwKrhi.js"},{"revision":"061220ca472084888646195fc7e74a77","url":"a/B35MBwwj.js"},{"revision":"1273d391fba2d30f1ed1ae863fd8bd60","url":"a/B8JVha0x.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"895144ed79ec9df901c3259efc7ae0c6","url":"a/BDvbH6Ts.js"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"62e407a355134df57bcef422b9c8d68f","url":"a/BG-JZHmb.css"},{"revision":"744d84fac6040f9cc95968022935a8b6","url":"a/BHWXFfAC.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"037651bf99a1ceb151bd4b896ebdfd96","url":"a/BMzGGARY.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"6629942d4dec5b355bc8404d0cbde5ec","url":"a/Bso39p1d.css"},{"revision":"3b293718bd985b1abdc75eb5f6ea7957","url":"a/Cdrl44yq.js"},{"revision":"d37f2550b612c3d532a7296c39170cab","url":"a/CebV7XwJ.css"},{"revision":"70de9d0c80a8b549e0c0beef92db3da3","url":"a/CHXXXb0v.js"},{"revision":"5b0ef597b94c68fc59a4f6b072396e88","url":"a/CjhdjYO4.css"},{"revision":"cf241c4b730da985e7ab536b85a0dcb5","url":"a/CkTnwJ5u.js"},{"revision":"db665eb2fedc0f6b164bb0706b47b595","url":"a/CLp_npXr.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"946769304cc26c13ce1c91dfb31591ac","url":"a/D0S1kURo.css"},{"revision":"1dc5b2bedbfd11bd339de27ef659a622","url":"a/D5mnDQ30.css"},{"revision":"bbf5b1f6dc382d552ea93e37865ed9bd","url":"a/D5mTskpD.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"8a7ebc520b0b2bf310dfc1fb986c0f5a","url":"a/DgnWk4mW.js"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"cb2fd889aeae9777a177516d124de3dc","url":"a/DMrK58gk.js"},{"revision":"2cb5b984885ea2f11e81779266b6a641","url":"a/Dp1GyMqO.js"},{"revision":"1a5ab1f8b8004290119f1938a331ec32","url":"a/DRL4_Hi4.js"},{"revision":"725b5d488a814c823b2cd52ea219ac2f","url":"a/DTRWygl_.js"},{"revision":"544599de1820280b4f1f898c1cf8ca12","url":"a/dVkkewMY.js"},{"revision":"f6152ebadaa5fc77c40758d6eb770071","url":"a/DwZ02vbH.js"},{"revision":"3c36d2545e70fac26b645fd1c9b4b9f0","url":"a/EEzvZiDp.js"},{"revision":"9deacef5e8adb199f063aa9cc7faa510","url":"a/FFkrmO-y.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"8ac07633e08fbf2c4eb022724736537d","url":"a/pylNbOLR.js"},{"revision":"d02f79976532938bc3c85793aa5557cd","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1760808069643,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
