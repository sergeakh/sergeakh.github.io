const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"e6c757a045993b07a5b2312e082c18b4","url":"a/5bLe1H7L.js"},{"revision":"516907fc626746b66352fcb2797bb839","url":"a/6UJlYkwb.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"b777f21f6f25ce7d0224d2499bbd30ef","url":"a/ayF70WZd.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"cbfd28873412ec535c3845ab2af7065f","url":"a/BGIWnnRK.js"},{"revision":"fb7a79186eb9e4613318aee7443b8cea","url":"a/BGVe4BrZ.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"0d7fae0414ead12688ee454e81d2b4a8","url":"a/BO4aEnY_.js"},{"revision":"543135532e1aad87e279897c6f7c8d19","url":"a/Bu9KDVFe.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"2354b4f9463775d8d338b34afbf48546","url":"a/ByWcqUJv.css"},{"revision":"4f985d2e2988a3d62929aec03d08861b","url":"a/C1eUrl2N.js"},{"revision":"69cb7bb0dbe9f25eda6da9f2a3af51b7","url":"a/C69z9jmS.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"829410d3a5fffaa82d530ffad81a506f","url":"a/CgzYhq8f.js"},{"revision":"b73ce7f6cf8a5f86d379f9c21a3881f7","url":"a/CMPjZ7we.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"64efbf1e7b61ed4663b54a8dcabf22bd","url":"a/CzmKD0Ij.js"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"c327006bed7e01809c44e8226771dc12","url":"a/D5pMQbM_.js"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"ee47f7f7c77ad8de38bfa649aa3786e8","url":"a/DRDdJUyp.js"},{"revision":"0e683e2f1c1d77b4a35236bb1b52ddb2","url":"a/EBsDuz8F.js"},{"revision":"3b3449ea97bd38dba27bf2c1a85d85a8","url":"a/EWwK5l_P.js"},{"revision":"483c32a08d43a1a277b0b1f5b864eeaf","url":"a/h58h1Pws.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"8d18bfb5a14711a9aeffb107e495af2a","url":"a/KV05Ch2l.js"},{"revision":"13cb5de4ad9e8c3e51caf0b731699b3a","url":"a/sYESSYMJ.js"},{"revision":"e6836e54f52da99ebc8f64c28f0d06c9","url":"a/VeSXEBsg.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"3482af5b965e2cc6db33f4ef254aa884","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1759584418536,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
