const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"275568f98ea58c19a53b4a2ae246f2b7","url":"a/B2OlgkgL.js"},{"revision":"6889e5a100316f5b7cd1a9e5a925e0f2","url":"a/B75O1fNz.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"2a8cf39b1e2bdc82eb7fdd915f49f296","url":"a/BePJvNJj.js"},{"revision":"2f59a5a5b59363b7be8082b234c200b3","url":"a/BH9_U9m1.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"e23366f78f9b4ba113b1801c5c70bc5a","url":"a/Bk-8lRoP.js"},{"revision":"0adcb0dd61b759602801f12a6b94d937","url":"a/BWe6yxXt.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"064325f021ff8f503c75e672b58e2151","url":"a/C8WRc5Cx.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"265759c9849f7f609003a13c3711e6fe","url":"a/CNro5ssa.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"0c5c81c853e00ae7019fd0acc6a696f3","url":"a/CpcTVKdW.js"},{"revision":"e2b46c23633ed45f05ca1d884a6ee918","url":"a/CtU3uEg7.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"1f984fa33358fc695787133711631916","url":"a/CuS3hYSJ.js"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"9ebea9d36daf05ffe5547b3aaf813521","url":"a/D7yH296E.css"},{"revision":"e67076bb7ac13776321a0d1b3c76da84","url":"a/D9JeXTuY.js"},{"revision":"57845ed5aafda90c71913941ef16a0b4","url":"a/DBBv54D9.js"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"f0b7e5975d0a13710f9e1595bed830e9","url":"a/DGLwPf0Q.js"},{"revision":"16b2ab4196f1449e3691d74bab750181","url":"a/DkL3S2t9.js"},{"revision":"91a2e246092cee1ff62351dbf506c5da","url":"a/DQskcYgK.js"},{"revision":"2fb5d790e5becc030ca2cf87bed352f0","url":"a/DXPk5Q1Y.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"c48b9a2578e4ab90de6547efbbbf2a97","url":"a/pp8F1XgO.js"},{"revision":"1986dd68e6f2cddcdbf1e99b82f32f68","url":"a/PUKOro7m.js"},{"revision":"c610384aa65c52388ac7590aee776a29","url":"a/UXIjRJC_.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"cbca0913f8ec755b50a4083d2099cec3","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1759487709987,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
