const u=[{"revision":"7c6ae920224f0b9b6c5ecea741b0421c","url":"a/-fZo9auU.js"},{"revision":"7ee97a99fa37b27a7238b1c7c675f63d","url":"a/32H9feC1.js"},{"revision":"544d2e122a9c6918ad852cd8489e92f8","url":"a/5QDHV44a.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"7676d13f7ee464d79a648aafd2e90425","url":"a/B-qfT0BU.css"},{"revision":"9b6db412474e38dd7bd5268e2666d999","url":"a/B1zb9yBJ.js"},{"revision":"f4eeaf1b72775523b8b24326269dd361","url":"a/B4hIXq8_.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"8b69e0a230ad1b4d95c4ea3c26b662de","url":"a/BgfAJi1k.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"52cd3f92b88d33365ae52868f2c29da7","url":"a/Br2UU7vL.js"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"e1401782eb28cbc65121b5784420fdb2","url":"a/Cc_C0hMu.js"},{"revision":"17fb14e66ed97be3ddcabc05498f4f40","url":"a/CEXSFBCm.js"},{"revision":"d6903113982074d124ef69b6178d5f32","url":"a/CfksNsXO.js"},{"revision":"0284ac129d32266946327b1597646d46","url":"a/COmJR9Fj.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"e1c6b2a6b275e2853b63390606fc8ded","url":"a/CQZEKcSX.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"2a74414afddad94af1fb52da3269f473","url":"a/CVVIZ9wO.js"},{"revision":"11a6d01e9f1fdb54a605539540bb5908","url":"a/CwmelK06.js"},{"revision":"ca2202dc29ffed9144e6b4c657bbdf27","url":"a/D1eglndR.js"},{"revision":"773098f08c72173af734b75e3417f554","url":"a/d6G-PTev.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"507664d286a671837990fa8d530af07f","url":"a/DckVv4gR.css"},{"revision":"59a20d0c77098e1e34a960739fc5ef36","url":"a/DEoUWNck.js"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"b8f86724f02164f822125a6a8bfe2aaa","url":"a/DIG4cCKt.js"},{"revision":"6e1fd8b66b99d38b88e069e764b41396","url":"a/DScxp1ff.js"},{"revision":"5882e63648fd000477ca12c952fbf95d","url":"a/Dv0LbEl0.css"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"fb45efa8eb539f3fa220cd5ec4e590dd","url":"a/gkM29rSD.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"f1190674ab46ed2f49a2a6dd839202b2","url":"a/RdnXtMIu.js"},{"revision":"3df608f12f9bb1b80f2dfb4e73b37e85","url":"a/tIfsuMq5.js"},{"revision":"5a24f735c12d77b8cc512f111d0499e0","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"b25928b2827e5aa02765643eed2bb6f9","url":"manifest.webmanifest"}],r="0.0.8."+1761093455576,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
