const u=[{"revision":"5e90c042d86a66e8572b7daf06c6df93","url":"a/9lovJHx7.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"4d888b0f1f235eb1078fc639a4dc853e","url":"a/BezelIz2.js"},{"revision":"0c514c96ed8a254b849ae551f8283336","url":"a/BHgs87Hj.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"076d6504bd4ce0619be5beab89e2884e","url":"a/BJ-3Fvy3.js"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"28d752a6a7e25ed319ff12a9ee99b238","url":"a/BSglOyWu.js"},{"revision":"3a89c46f17cde3b709dac480579ba3d2","url":"a/BTXLNO23.js"},{"revision":"2e9d3c46c8a4f5f4e5a0d426e5b7bbae","url":"a/Bu0pKYfe.js"},{"revision":"10e6597f2dbc06d90c910d69da7d3228","url":"a/BZWL7i2o.js"},{"revision":"0227be78e2eddd0a541a00b813756d10","url":"a/C1eVIBBD.css"},{"revision":"9551e8475f8f9f001b731ea3c3663551","url":"a/C91rpR_m.js"},{"revision":"2ce54dd537bd71d6110f7c00d5884d55","url":"a/C9dYsQy_.js"},{"revision":"9225a0564bb7b49bebf1adbb96c1ad3d","url":"a/CCtlgutt.css"},{"revision":"41d9b0f79fbd919b44e2599422eb92c2","url":"a/CDpWjAHY.js"},{"revision":"737e085c38d8480c03f059cc43e8c20e","url":"a/CJkK19aw.css"},{"revision":"5863f2f65d42848c0847f17edea88cc0","url":"a/CjLqNXyn.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"57bf5ff0f2c26284212309825d69375b","url":"a/Ct4H9X3a.js"},{"revision":"f5405e8468c66fb5652385f822523111","url":"a/Ctvclp4m.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"33670c38db20c0a1bc1d296bd882cb51","url":"a/CVg-9YV1.js"},{"revision":"0988f2155e2a348f894142f7d470f704","url":"a/D5yavu6x.css"},{"revision":"b7d6fdd658eb3cf011c67dffd24046b4","url":"a/D7TJZpgM.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"85813d2a0f69fd67a1e4a026f91c63d3","url":"a/DJ_UDTJe.js"},{"revision":"73c86513e59c4b741d629f121535f1af","url":"a/DQAx7Aex.js"},{"revision":"e791e53253570fcea2a86b2d2849f67f","url":"a/DuOUTjaz.js"},{"revision":"c73ccce2e2b1b971a8803dec052ae116","url":"a/DZNlfyYK.css"},{"revision":"a63309728b6f26f037c814455f505086","url":"a/ERln_lQ1.js"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"4213fc142fe0aa41daf2c8b3bd655688","url":"a/i5mto3Yb.js"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"c89b8b98d3f7286f73c5cea2511d1ef0","url":"a/p-2cOc-c.js"},{"revision":"b808f8acd7414acac61227a1ba550110","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"c45f1205ae6690ef3322397c00dbdf31","url":"manifest.webmanifest"}],r="0.0.16."+1761176397687,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
