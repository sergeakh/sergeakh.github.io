const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"824b1ddf96428e0c8281647452fda5f0","url":"a/B0ux6SwO.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"5f1bdd462b5ed88452cc0d784555586b","url":"a/BCBgJKYQ.js"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"73540452c76cabec6cc3b94d342045b1","url":"a/BqMALzUx.js"},{"revision":"aa275c0cfe789e34e6da231513ce45a1","url":"a/BSvNDJHE.js"},{"revision":"bea801fcf77d691bcc5a2d3622513014","url":"a/BXF-sKGc.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"735d75086270347dd8b3da2a5d2f0460","url":"a/C9tdgx3G.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"ff2ba63ba5f39b782e1445bdf55a9b47","url":"a/Cd6rfBio.js"},{"revision":"a0de74b2c3658e0386f307fffd4e635d","url":"a/Ci9WUQJp.js"},{"revision":"f95f22d71ec2aa78be5f1e374be191b4","url":"a/CLv7OhiL.js"},{"revision":"9f7636b6df5dfc6e6d4c7adabfe8bc6f","url":"a/CmbebsHl.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"7b529ebacbc4126bef28db854bce7813","url":"a/CPgELWQT.js"},{"revision":"abdc0ea75ced19dcfa67ccddfa2ed842","url":"a/CTIdxcct.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"559190aa646174f86ef41f2a764d804b","url":"a/D2zpdJaF.js"},{"revision":"a5861092a6d25122c19f0d91b3586ad2","url":"a/D94e5Wzq.css"},{"revision":"24cbf287dd6036ae30a70edea729a252","url":"a/DcNqUjLU.js"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"35c354f2883f5fad9a4bf4a8fce37e64","url":"a/DH6a5c9A.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"3145c60821a5c6c1774b56a80b7fa804","url":"a/IneLEGDM.js"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"6f836443a32aa3f16fea614c18cf47da","url":"a/p39gdbbU.js"},{"revision":"cefb0157ddd3498107ebdda9282bd12f","url":"a/pxdzwqH4.js"},{"revision":"30bcea22d2d6a8e2995e42c6df4573d0","url":"a/t0_Y5s2D.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"242ccea68afedfbb2af1dc16e3f83e62","url":"a/zSgHOKGF.js"},{"revision":"9eaa133b6ffaeaa33082681d683dba8f","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1758625289131,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
