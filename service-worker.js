const u=[{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"b9457a5c2774755674f9f3a3713d56b8","url":"a/B2X1Sr9W.js"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"4a82111c55a9c19a65e1eb66c35e9819","url":"a/BCgrmG2v.js"},{"revision":"18456d630decd07c60ce22aa39caf269","url":"a/BG_ybiX3.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"1549657c9f3065ff64eb15d109c59821","url":"a/BLTzswp7.css"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"d69db8591d99897cf8ecea5458432fe5","url":"a/BmSHAoaR.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"76937801d963e7c45535c132d4fae973","url":"a/BuutRz2O.js"},{"revision":"53bb4a9541e385e528988357fbb3962c","url":"a/C1wSLy4F.js"},{"revision":"16eebee3d05c2a2e7d2e9ac422bb822c","url":"a/C37ccwpw.js"},{"revision":"a1ebf9d11e98169ad66ff918fe9ee8ca","url":"a/C6OjO_O6.js"},{"revision":"9225a0564bb7b49bebf1adbb96c1ad3d","url":"a/CCtlgutt.css"},{"revision":"744c501562379ed8fb8ff7567a875460","url":"a/CFtnZ4ot.js"},{"revision":"737e085c38d8480c03f059cc43e8c20e","url":"a/CJkK19aw.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"0d8d577f7f879edf0ff5632a657e9551","url":"a/CPESMClp.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"c8bc6f9bfa8bd22f8b87f56ffcf03d42","url":"a/CuHa9L1E.js"},{"revision":"d5df7628398efcc15d6b81a85e24d164","url":"a/CV9Es3Ir.js"},{"revision":"c28734621a1440f0017c9accb8eee8f4","url":"a/CylPsmPr.js"},{"revision":"e2f65407eb78e197ae281159392023c2","url":"a/D_Du8inO.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"38f034b6069c6f8816cfaf0fb4f73a6d","url":"a/DFra0wk8.js"},{"revision":"07102f4b4bf772306e6dd6da58f871c4","url":"a/DFZs3clB.js"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"077d64b18c9829614f97e9ef116766e4","url":"a/DiJjkBbY.js"},{"revision":"c58569bc813eaabfc9acf6252da3b549","url":"a/DJOvs-XL.js"},{"revision":"ce6dafa205891fc6f0406d3ed0a89a79","url":"a/DlxBpJjD.css"},{"revision":"a44dce1d9ae3a2d234dda4989baf0e57","url":"a/Doh6VfQu.js"},{"revision":"42b820a761507f4caa460dfe25660014","url":"a/DOV6M5Hm.js"},{"revision":"c73ccce2e2b1b971a8803dec052ae116","url":"a/DZNlfyYK.css"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"798bffaa079743124a166cb4909dbd4f","url":"a/rTn9fzQl.js"},{"revision":"5306b16ec96bcab1c2d54fcb79924f53","url":"a/VbMfqZUS.js"},{"revision":"ba80c18938ec2ccea00f73cdf42df7ce","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"c45f1205ae6690ef3322397c00dbdf31","url":"manifest.webmanifest"}],r="0.0.25."+1761231557357,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
