const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"a384447087dc410b0b979d932ea53277","url":"a/5sHWzzxV.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"8afcba0f6548ba298d3acff05c337a16","url":"a/9zfSAXrY.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"bf467d280f1164e6cb3c167b82e32236","url":"a/acCsWnC4.js"},{"revision":"2aded4e87a0f4e2b85ab1d0b4a50b144","url":"a/AcRlA0nj.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"31260dfd382d39ba401e59d8dc12c619","url":"a/B13vmQvq.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"ba50f5c3197fa7737d1d1124f803a49b","url":"a/BbUUGm8r.js"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"543a90fcdd3fdbbeac6bfea33da7a259","url":"a/BmAGFxq8.js"},{"revision":"904adbc5551f00f1b003def02c9638c2","url":"a/BONuIDWM.js"},{"revision":"c7cf1aa20f277897c1cc20f83bfcbe48","url":"a/bSQj4fEV.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"e20becad09b744a10dbee95e5d0f4c0f","url":"a/Caq-W72a.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"66fccfc297bc82239466a08cced5fc36","url":"a/CJ8CKZV5.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"7401f853c93110a65c0b7ddeb41d1255","url":"a/CPI7CRbD.css"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"38ff2106073b3f9e67cb2e1c397abebc","url":"a/D7rIx20g.js"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"3a61e224117b7ebddfc59db177f0b64c","url":"a/DfRdfUBa.js"},{"revision":"c8a37bcb7a7c1e209395cff442f8150c","url":"a/DGk8yB3K.js"},{"revision":"67f3509d6e77fd3b2410092122da0cf8","url":"a/Di3bOSJL.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"b4e484790660b390288c36509f848b27","url":"a/k6Sas3Gp.js"},{"revision":"98ec637814e77f11a86c083bdcb8ffe5","url":"a/tf0cJmoX.js"},{"revision":"a09c63cd38c63231c59ae950ded16dd7","url":"a/VWDyBWg3.js"},{"revision":"20f724c194bf0cf92c3132a39dcda7a5","url":"a/wcpHUeV8.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"921eb23bcc8d70c5a6ab98d06a542530","url":"a/z8TUQB1J.js"},{"revision":"e1346cbcddf165db66a2acf76c28fd19","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1759359733674,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
