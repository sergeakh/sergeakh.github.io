const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"4a4e1d15995f8085abe0774093902a6f","url":"a/69QccfUw.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"ebe7dc22afcad4e69cec36049b706a50","url":"a/B8neLUb6.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"a3a005f38e5820e0122681e773a748fd","url":"a/Bdgn3YGB.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"a5d3883299c320ff09362edac54b2502","url":"a/BguvZHxr.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"207c2d9b149f00e2f9090faad1ff27ed","url":"a/BJ0T1mGX.js"},{"revision":"dd802df1b995b9257143362e9f8810d3","url":"a/BJYkiA6Q.js"},{"revision":"69060b264cddbe1986087597814e7df8","url":"a/BLsQr5Kx.js"},{"revision":"d9a6e674888493402434e67bb69d669f","url":"a/Bn2am6BM.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"2ac65b21957966499b2681aea18271c6","url":"a/C6ZYWCwr.css"},{"revision":"355f901d1a63ac0a74cb7d53ab62bba6","url":"a/CasJovAe.js"},{"revision":"784cdd67d1aec33de22a412ba7f19d84","url":"a/CbaQ2l7N.js"},{"revision":"0dc23dce66f481edee04bb1357a2df15","url":"a/CF5t0R3i.js"},{"revision":"5b0ef597b94c68fc59a4f6b072396e88","url":"a/CjhdjYO4.css"},{"revision":"db37019c2d594fb13ea3aa600009b48b","url":"a/CL0DzhDO.js"},{"revision":"e44e3f18e6a085ad65532be5d6780c59","url":"a/CM5-oM-8.js"},{"revision":"d5a11bc0c7b30da6adaa05a4f8c8e490","url":"a/COIA5VXu.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"ac2f7e9a864567ebe963fdbe5080fd3e","url":"a/CpVGrat1.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"1dc5b2bedbfd11bd339de27ef659a622","url":"a/D5mnDQ30.css"},{"revision":"dbabce0910d68f6438abeb637a02d358","url":"a/D7-rxewd.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"6bc1e3aa483f2756c6718208e41598b1","url":"a/DmDyRI0_.js"},{"revision":"6ef2fe3fb094bfbfca4c2b28a3aa4caf","url":"a/Do5SPfCi.js"},{"revision":"e1e8e481cd14b007c19bd1cf17cafd3f","url":"a/DSG7uiKg.js"},{"revision":"ca43eeb9f7161c49fa70c2678e829b2f","url":"a/DskseV-Z.js"},{"revision":"7b3519e21b87d2cf3301e1d1fa8fce4e","url":"a/DtYzUS8R.js"},{"revision":"db570a854c10ae27b8a8149fb7bbbd78","url":"a/DVscFMat.js"},{"revision":"07d476b38df314b0a3f43cbf37e2f518","url":"a/DWUfwQ_G.css"},{"revision":"08f36740b857a5558911726fffb6e14f","url":"a/DxXL0bjp.js"},{"revision":"6c93d9472ab7239b6308162affe19018","url":"a/Dz9AXCrV.css"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"92d2952ab6ed85bdd8681ae0f594a8be","url":"a/Kxxs-ZIj.js"},{"revision":"328fd831fa4139324b0be956a9ff8a30","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"b25928b2827e5aa02765643eed2bb6f9","url":"manifest.webmanifest"}],r="0.0.7."+1761024609295,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
