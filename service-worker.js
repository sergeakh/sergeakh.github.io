const w=[{"revision":"48552f888f4f90b0dacbd05d475a389d","url":"a/-nhhJgAL.js"},{"revision":"0d79f68fac516774d1d01abd17b05e09","url":"a/70bqyQ4Y.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"e8aff968bdb1e4ee1d789cb7f93d7375","url":"a/B4en0-hp.js"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"dfcb5ea8f1acf9861b2ff035da612a18","url":"a/bhO7k_Kp.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"221d86032479ac382c7c755421ca80dd","url":"a/BmBWzDfA.js"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"e3bbbae1a9615a0c12661001bbc97451","url":"a/BMwKOHd1.css"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"9799201291d1770e7be02d0516a8dbb1","url":"a/BSMrMttg.js"},{"revision":"2bd7cacbe334cb015f8e407cb8d32a51","url":"a/C-Mx_t1i.css"},{"revision":"a317b5d3202bf791d292fe2a466cf0d2","url":"a/C2VuNxr3.css"},{"revision":"a007653e53103ec34482eec44ab17b4f","url":"a/CdTHAivs.js"},{"revision":"01fd2c7b3f53c935f746305ecdcd310c","url":"a/Cfj4VC6W.js"},{"revision":"737e085c38d8480c03f059cc43e8c20e","url":"a/CJkK19aw.css"},{"revision":"98af131f923abf95c8be9f9e1932310d","url":"a/CjQnXtHE.js"},{"revision":"fabb9ae5cc5c80059f9ae23f29ed8fb3","url":"a/CL_YkUt4.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"f3eac15a5a2bb7f72def14c5067208db","url":"a/CvDPCPkY.js"},{"revision":"42e989a06a585e7266ddc5f4cc22f3c9","url":"a/CVp6EePK.js"},{"revision":"2dc48fc6a01321faa0cf25596fd982f9","url":"a/CX5ARnEp.js"},{"revision":"a993d6ac147b734488d3a4305abbb6ad","url":"a/CXZFdJhT.js"},{"revision":"b1764820ad669b338a3d9e4ff36db695","url":"a/D2ag99TI.js"},{"revision":"d6227f79736bd0e57082fadf01e49511","url":"a/DaL3PHmJ.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"b6432f3159f67402d050ab6f75266377","url":"a/DC2toOmr.js"},{"revision":"d544f0f7d522b1279262c2aacb235aba","url":"a/DdooTEgA.js"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"9aa5816ba637ac891248f3fd99902fc1","url":"a/DGmmffOe.js"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"8c0599f8eb87e377bf706f40af11b171","url":"a/Di0RYbjh.js"},{"revision":"211ea52ff63aac93f258d2b9884cdb9d","url":"a/DJGxTJuX.css"},{"revision":"aaf41bfc3f5470f5f9a70800a1c5fad2","url":"a/DkxWpmYy.js"},{"revision":"ce6dafa205891fc6f0406d3ed0a89a79","url":"a/DlxBpJjD.css"},{"revision":"dadbae2f84e97438e2c9e82e18970911","url":"a/DoivkJcU.css"},{"revision":"07d476b38df314b0a3f43cbf37e2f518","url":"a/DWUfwQ_G.css"},{"revision":"ba6655a11d169e71409e7d7d906b3ce7","url":"a/DzcSQNo0.js"},{"revision":"c425ac5f73fb212a7f4b5391bac0817a","url":"a/eWR4vQQR.js"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"1bfda15dd009a953f5714f776f02216d","url":"a/kmt8233R.js"},{"revision":"448ca26813fa0f5dc4f8955989b10aed","url":"a/P0j7RMoZ.js"},{"revision":"73158f194dded53336b941696f8568ed","url":"a/wJM0yv-S.js"},{"revision":"ae0491c3e125c557c01afda726a43231","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"c45f1205ae6690ef3322397c00dbdf31","url":"manifest.webmanifest"}]||[],o="0.0.34."+1761536990339,u=async(e,t=3,s=1e3)=>{for(let a=0;a<t;a++)try{const c=await fetch(e,{cache:"no-cache"});if(!c.ok)throw console.warn(`Fetch for ${e} returned status ${c.status}`),new Error(`Request failed with status ${c.status}`);return c}catch(c){if(console.warn(`Fetch attempt ${a+1} for ${e} failed:`,c),a<t-1)await new Promise(n=>setTimeout(n,s));else throw c}},f=async()=>{console.log("Precaching files...");const e=await caches.open(o);await Promise.allSettled(w.map(async t=>{if(!t||!t.url)return;const s=new URL(t.url,location.origin);console.log("Precaching",s.toString());try{const a=await u(s.toString());a&&await e.put(s,a.clone())}catch(a){console.error("Failed",s.toString(),a)}})),console.log("Precaching files succeeded.")},d=async()=>{const e=await caches.keys();await Promise.allSettled(e.map(async t=>{o!==t&&await caches.delete(t)}))};self.addEventListener("install",e=>{e.waitUntil(async()=>{const t=(await caches.keys()).length;await f(),t===0&&self.skipWaiting()})});self.addEventListener("activate",e=>{e.waitUntil(d())});const l=async e=>e.match("/index.html",{ignoreSearch:!0}),g=async e=>{if(e.request.method!=="GET")return fetch(e.request);const t=await caches.open(o),{pathname:s}=new URL(e.request.url),a=s==="/"?"/index.html":s,c=await t.match(a,{ignoreSearch:!0});if(c)return c;const n=e.request,i=n.mode==="navigate"||n.headers.get("accept")?.includes("text/html");try{const r=await u(n.url);return r.status===404&&n.method==="GET"&&i?await l(t)||r:(r.status===200&&await t.put(n,r.clone()),r)}catch(r){if(i){const h=await l(t);if(h)return h}throw r}};self.addEventListener("fetch",e=>{e.respondWith(g(e))});
