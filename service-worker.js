const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"1f9ed036fe420998e782540cee4f21e0","url":"a/B8gf6dsH.js"},{"revision":"ebe7dc22afcad4e69cec36049b706a50","url":"a/B8neLUb6.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"a3a005f38e5820e0122681e773a748fd","url":"a/Bdgn3YGB.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"e46c70f9569fdac5a2e4c23934efe675","url":"a/BKsNgA9j.js"},{"revision":"48d48dbe8133efae1a3286704445c53b","url":"a/BMnKTeqe.js"},{"revision":"cd7430b06c447251ea77f4315827768d","url":"a/BQKv14oQ.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"1adc15ed654ffe56a7e5f81b824c1b1b","url":"a/BvYlWkKf.js"},{"revision":"892c99426092f26d7b79c09eb7ae7d5b","url":"a/BXOPfi5r.js"},{"revision":"73d651939d5356415fefdb2616b00ec3","url":"a/BZO4umrL.css"},{"revision":"deae24bf4ca0392486b35a4f9ca6d561","url":"a/CCI6jryj.js"},{"revision":"5b0ef597b94c68fc59a4f6b072396e88","url":"a/CjhdjYO4.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"85619f8a794980d74840ce6ef2300d8c","url":"a/CQIeEsEt.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"19ba82171ad0c15058c833c3b860af3f","url":"a/CyHptn8r.js"},{"revision":"f0ac646214751db9970f78c100e9fbb7","url":"a/CYMn9pV-.js"},{"revision":"139434b2b69807ccca7987b623cb972b","url":"a/CZoJnAfS.js"},{"revision":"a7976cd8ea95ade1e19dfcf300f6b042","url":"a/CZuleLeD.js"},{"revision":"40591e95f54382ec4d2a02e9582194ee","url":"a/D_F_hRZQ.js"},{"revision":"1dc5b2bedbfd11bd339de27ef659a622","url":"a/D5mnDQ30.css"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"6153d2bfd4400b1fd3dcd4b2891a6da2","url":"a/dChR3JIg.js"},{"revision":"5f4aef705f01c25197047c0ed4794e6b","url":"a/DFY7Ai11.js"},{"revision":"d389569f0e65c4faae65fee5531cee73","url":"a/DGj00_J0.js"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"d508cecad1c01b73a83e7677b5fe36bd","url":"a/DIhVOAXH.js"},{"revision":"563a629ddd84c7f378f835e1ddb9e992","url":"a/DUYBbUzD.js"},{"revision":"07d476b38df314b0a3f43cbf37e2f518","url":"a/DWUfwQ_G.css"},{"revision":"6c93d9472ab7239b6308162affe19018","url":"a/Dz9AXCrV.css"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"aac556c40854b83e102aa77428b93730","url":"a/g57uDyOq.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"b77b01fdf340290f9a584a4a6f8d531b","url":"a/l1DUglfH.js"},{"revision":"9a3092abd1459cc8bfb222b99b0e88c6","url":"a/V-3qyu_i.js"},{"revision":"08f6b28545309d909dfd507d009e698a","url":"a/Y9yStzu0.js"},{"revision":"15afc531b80e71d6d2f07372b2a78499","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.6."+1761017260709,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
