const u=[{"revision":"e22dae08796e375513217c7f955cc340","url":"a/0kjH8tCq.js"},{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"d8221817f8b440bc64e2c3e377863ad0","url":"a/9jWGu6-X.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"249fa5bc55f956bfff88e110a9841742","url":"a/B81V3_En.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b9586e001c52b9eec6936f80cecb8371","url":"a/BcwE8x7S.js"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"a020d481eace5505aa30080c24e3b3aa","url":"a/Bi5cOs8-.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"03b4b0db5169f55c2993547f0decd717","url":"a/bMlpp6x8.js"},{"revision":"02872977570905b11d2b2a6a8a71e76b","url":"a/BtNpV3Lf.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"3b3014b8fee83bd91a94dbb668e26d69","url":"a/CBLxbEnf.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"29239d7dc44037b75928fca15e643257","url":"a/Ctj3u_uy.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"1e49961e44929988b1999cca4eaa05e8","url":"a/CUDg0LhV.js"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"29f9a3bee50f0f2f30ff40225786be85","url":"a/D3S3suT0.js"},{"revision":"abff78ca00442a04e95ba3ebcdbbd7c9","url":"a/D6TQWAJn.js"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"e68cea6f914c46a2294b3891aff975da","url":"a/DHbEesrL.js"},{"revision":"1af7d5e30369085ff63eb5373ce2e73a","url":"a/DHkxzMnF.js"},{"revision":"d6ddb02c087edf4fda89f70d5bfda3c0","url":"a/Dk9dXw5m.js"},{"revision":"af2cc4e475385a3d7fc135f450cb2068","url":"a/DKZmOzcb.js"},{"revision":"3f59582960b8ed4f46cb545b5c5b092d","url":"a/DXzylXo6.css"},{"revision":"6b8e64997793758f2fcabc3e44903f3f","url":"a/hK9pe8r0.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"9ddc2f1f56ed1443920d5768baa9c126","url":"a/J7GoufYE.js"},{"revision":"112d72259a3ece790f07d3c894646780","url":"a/ul1vSUmn.js"},{"revision":"efbb8cb15fb833eb192e424face3c9fe","url":"a/vINv4ZFr.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"44ebb45e94656770570e7c03e4b737b9","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1758943428397,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
