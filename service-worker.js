const w=[...[{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/a9q_jSmK4.js"},{"revision":"71b760d70cfb38c4fd9b8a5104be2056","url":"a/aB29A_v-K.css"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/abA9hIFUQ.js"},{"revision":"925a254ed4e44d161777f2733c1f6176","url":"a/aBAoWKeSn.js"},{"revision":"5183df95f403cf3141fa28e421890bdc","url":"a/aBBI8MgAY.css"},{"revision":"6814369e506c49dd7deb5d475a4b905f","url":"a/aBem4Ctjp.css"},{"revision":"b62b7409b030f95305c541cbc5550459","url":"a/aBeWFm1o7.css"},{"revision":"a72751e48a520a5c5c85bbd674508893","url":"a/aBgAKudUz.css"},{"revision":"eaca239b66bcec51efc09d4e3bdbf59b","url":"a/aBhtHFOya.css"},{"revision":"50ff4de86eb90d0a84712e4b68605fb2","url":"a/aBkJ2cwi8.js"},{"revision":"d52a02f7643d24b0db263ddb6b8159c8","url":"a/aBrkJtqMH.css"},{"revision":"0756bcc0a8e4a941abd524feb7623c2b","url":"a/aBtZKhmYu.js"},{"revision":"78f617ef7541082fe05c3bf732d6bd97","url":"a/aBUcFUk4M.js"},{"revision":"01a2f7726dfcb3c6e4d39a2de259548c","url":"a/aBYvni-z-.js"},{"revision":"9aaf51ebee267f286ce950f6232385d7","url":"a/aCEBfkSMR.css"},{"revision":"087eb6601e9dc8c195cc716b72dc325a","url":"a/aCFxum3W2.js"},{"revision":"f77f8e8bbf56a49d50718736a04b5bb0","url":"a/aCg3filF1.css"},{"revision":"90bfed1e9abbf0fc96eeec9d6f61cb7d","url":"a/aCH18nfIo.css"},{"revision":"2b6041f2205c32d8767583c9f07dafe0","url":"a/aCMrL_Y6V.js"},{"revision":"c54b7a834e904ac83736677e0cc03e1f","url":"a/aCnQXLXXB.js"},{"revision":"262e707fe9c3273a07fddf2c95aaa2f2","url":"a/aCovFy9VH.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/aCpa8lgv9.js"},{"revision":"27b309467c952df2537dbb9e9ddc23a0","url":"a/aCpDlkTKh.js"},{"revision":"31d92a2ecd3957f5b174cbc89fb2533c","url":"a/aCpVH8wUo.js"},{"revision":"34b6ff6598ec7454d901e4e470f6e84c","url":"a/aCRx54J_O.js"},{"revision":"87f9291353a9943a127f757f24e85266","url":"a/aCWn1BM4V.css"},{"revision":"f90c228bbef76ad488e2e72479b6db56","url":"a/aCXobA9i7.css"},{"revision":"4643a49f7bd2752c99f254eb47a00aa6","url":"a/aCYqPgi-1.css"},{"revision":"845b31d2f54a56bb9f9746817af12767","url":"a/aCZ2UCSRe.js"},{"revision":"e5930a6f386a12c4b9ee204ecb8607e3","url":"a/aCzWbn_Gr.js"},{"revision":"b038f2720860e94df26f19889c378395","url":"a/aD3ZdAu_O.js"},{"revision":"7fa186f9f7550301f96c7a81bfd7b7a3","url":"a/aD6SqZ8ZC.js"},{"revision":"f90af63389661cfe5c4070bfd37e4f25","url":"a/aDH3AN5a6.js"},{"revision":"919b568e99219a95a924e293da993dd7","url":"a/aDjSJDzG7.css"},{"revision":"3dbb1d840eec83b9058224f859861479","url":"a/aDKwUMAZP.css"},{"revision":"64a7cbf5c857a684ab87ad1155ccafcd","url":"a/aDluMktJK.js"},{"revision":"21371e9d8b0ab3c7d8887bf855f0ef73","url":"a/aDU96KTZi.css"},{"revision":"fb341bfdd1a47c76de4ad7340abb1d65","url":"a/aDv_iI1UX.js"},{"revision":"664672729109f60f22592d2827a204cf","url":"a/aeA8F7LG5.js"},{"revision":"b630d9bfaa008da5fa18156e80e580fd","url":"a/aem1NRqnL.js"},{"revision":"1eece98c5f06a473daee70f1aeb0affd","url":"a/afGUkjeV7.css"},{"revision":"cc92e9fc38450cc724227bdc34b3e5df","url":"a/aHdDxvcNK.css"},{"revision":"cb50b9f0f10956059c25723d1a6ca035","url":"a/aj6zxmxGs.css"},{"revision":"a86028867ecd26aaf3162d7c4397444f","url":"a/aJdo9IWKL.js"},{"revision":"38c96a6353e63976ebb03f8f861ae189","url":"a/aKeD5ucRB.js"},{"revision":"9d74a659b359ea9f2281a2acffa3b1c7","url":"a/aM0COfqce.css"},{"revision":"0b28818f1334ef4d8c6b2db14263f94e","url":"a/aMZqzt6Z7.js"},{"revision":"2fa5cfc9911550fe181eeb2c9145afee","url":"a/av-lqsyh1.js"},{"revision":"69fe1eb9dbf1849c790d7abc4e946dd4","url":"a/aVVhaE7Z3.js"},{"revision":"8ab514cff485281b73f045d1f1ba6255","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"64ff53675e33cb152380233172f621d8","url":"manifest.webmanifest"}]||[],{url:"/build-metadata.json"}],r="0.0.68."+1761947383898,d=async(t,e=3,a=1e3)=>{for(let s=0;s<e;s++)try{const c=await fetch(t);if(!c.ok)throw new Error(`Request failed with status ${c.status}`);return c}catch(c){if(s<e-1)await new Promise(n=>setTimeout(n,a));else throw c}},f=async()=>{const t=await caches.open(r);await Promise.allSettled(w.map(async e=>{if(!e||!e.url)return;const a=new URL(e.url,location.origin);e.revision?a.searchParams.append("__WB_REVISION",e.revision):a.searchParams.append("__WB_CACHE_VERSION",r);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))},m=async()=>{const t=await caches.keys();await Promise.allSettled(t.map(async e=>{r!==e&&await caches.delete(e)}))};let o=!1;self.addEventListener("install",t=>{t.waitUntil((async()=>{o=(await caches.keys()).length===0,f(),o&&self.skipWaiting()})())});self.addEventListener("activate",t=>{t.waitUntil((async()=>{await m(),o&&self.clients.claim()})())});const u=async t=>t.match("/index.html",{ignoreSearch:!0}),p=async t=>{if(t.request.method!=="GET"||!t.request.url.startsWith(self.location.origin))return fetch(t.request);const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,c=await e.match(s,{ignoreSearch:!0});if(c)return c;const n=t.request,l=n.mode==="navigate"||n.headers.get("accept")?.includes("text/html");try{const i=await d(n);return i.status===404&&n.method==="GET"&&l?await u(e)||i:(i.status===200&&await e.put(n,i.clone()),i)}catch(i){if(l){const h=await u(e);if(h)return h}throw i}};self.addEventListener("fetch",t=>{t.respondWith(p(t))});
