const u=[{"revision":"fd226a7cefcbf43b5ec026755891925c","url":"a/2cJqDjXQ.js"},{"revision":"e629c8a1a1b5fb4ddc02388c6565963c","url":"a/472jdDKA.js"},{"revision":"ff52c3ab556e09eb7938b431865b0f57","url":"a/4SX3IyFS.js"},{"revision":"48fceb036f6e01d0ad521065aeb4d573","url":"a/8d8u95b6.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"e200fe0ab504c8a8841d89c6cce18e88","url":"a/aDhiidBq.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"7676d13f7ee464d79a648aafd2e90425","url":"a/B-qfT0BU.css"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"05f2048df20958a1e7a6424c71d874c5","url":"a/Bpy2KKNj.js"},{"revision":"ae25e0ba5942a826a87dffbd0a543bbb","url":"a/Bq9KWC1D.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"56d0254cdef4430ea98e029a2881fd94","url":"a/BTd_aOTM.js"},{"revision":"9f475c00ba7f0ccbc9c54c34e56c1388","url":"a/BZ0n-S-u.js"},{"revision":"0227be78e2eddd0a541a00b813756d10","url":"a/C1eVIBBD.css"},{"revision":"9225a0564bb7b49bebf1adbb96c1ad3d","url":"a/CCtlgutt.css"},{"revision":"18905d6fec6905c334931d8380b12ad6","url":"a/CfUXjAqb.js"},{"revision":"d704fb0250d1f03275479b182fc19b79","url":"a/CnkHJ5rE.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"22117e9acc8799530ec9b4dfd48e86d7","url":"a/CQyNwVdP.js"},{"revision":"6664bed6fc7180af968b09b0d9f203ed","url":"a/CRnk-Y_m.js"},{"revision":"f83c6eff1ef980874865babf3263a55a","url":"a/CtU7fWff.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"4731fdab48b72111400edfb6be2fe7dd","url":"a/CUfLYA8A.js"},{"revision":"ffb267c7dab3f5086face825512a3e92","url":"a/DaczGqrU.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"241b0a20c79fe4dc02654a4cb528502e","url":"a/DNjH2OtA.js"},{"revision":"18a4812cf85f237e9c2bfe80f993c3f1","url":"a/DnzN9PS7.js"},{"revision":"ed75f6ef2bea3933633e436c022d516e","url":"a/dP31ECZv.js"},{"revision":"eab1fca1386896f242a9da253ae6226f","url":"a/DRtVqvnV.js"},{"revision":"c73ccce2e2b1b971a8803dec052ae116","url":"a/DZNlfyYK.css"},{"revision":"f15540cf0aec4167ef55ad192ae9019a","url":"a/DztSVt5z.js"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"4dffc323f1db10a62acaa93f9c626c13","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"b25928b2827e5aa02765643eed2bb6f9","url":"manifest.webmanifest"}],r="0.0.9."+1761115036180,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
