const f=[...[{"revision":"3d943d8d209aa82944a4645f50078660","url":"a/3JfVBB7p.js"},{"revision":"7785c0d2b974b59635f4ee75808526b4","url":"a/5_H2vgEL.js"},{"revision":"0d79f68fac516774d1d01abd17b05e09","url":"a/70bqyQ4Y.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"1a4136fb71b3dda6c88fb8b60f9ec6e4","url":"a/B_-38_0a.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"244e771bc5744acf71ee1240f6557a26","url":"a/BBAvW-lM.js"},{"revision":"971671f26fc8d7dd83bf8df70d93f149","url":"a/BBc_8Cj7.js"},{"revision":"b25eef0195920096d31bb01518848135","url":"a/BehNnd5o.js"},{"revision":"3a53f01426c1aea9fb98e49a3c854cd6","url":"a/BGf2Xcnb.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"e3bbbae1a9615a0c12661001bbc97451","url":"a/BMwKOHd1.css"},{"revision":"13c76f56f8661b6249fc4096f7054e21","url":"a/BoGNDIEh.js"},{"revision":"8278001a11bf5a71ee2064975165a75c","url":"a/BORMz9OT.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"2cb1ce4ee6411ef0c40c5e6b9dfe8347","url":"a/BrT9DYrA.js"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"c013ad2cb7b706f2380805979788bb9f","url":"a/BTdNMkhE.js"},{"revision":"2bd7cacbe334cb015f8e407cb8d32a51","url":"a/C-Mx_t1i.css"},{"revision":"09029bab9c37d412044ae61529b567d9","url":"a/C24Bju3K.js"},{"revision":"a317b5d3202bf791d292fe2a466cf0d2","url":"a/C2VuNxr3.css"},{"revision":"737e085c38d8480c03f059cc43e8c20e","url":"a/CJkK19aw.css"},{"revision":"48474f45c467dd91555d3b56b9575135","url":"a/CN5j0VHN.js"},{"revision":"d2ea084cc6d873d3378416a8a609c4a2","url":"a/CPa0Cw5Z.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"c7ad92cf9f8fdf0f3f15f46d623113ec","url":"a/CXpB-UKT.js"},{"revision":"1f23eca749d9479eb7525265d0998d39","url":"a/CyavWWml.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"211ea52ff63aac93f258d2b9884cdb9d","url":"a/DJGxTJuX.css"},{"revision":"ce6dafa205891fc6f0406d3ed0a89a79","url":"a/DlxBpJjD.css"},{"revision":"2e4ceeb752f768ea24cc5d31d5387a88","url":"a/DvgjXsRd.js"},{"revision":"07d476b38df314b0a3f43cbf37e2f518","url":"a/DWUfwQ_G.css"},{"revision":"82645a7bf31def4391608e3940941dcf","url":"a/Dya9H2Do.js"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"50c0db9e261417a00b712df7657eb1b7","url":"a/f-VlSYCt.js"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"7c4a865ab1abed5a9f320e79c715f079","url":"a/QwzJ_fgN.js"},{"revision":"065b3df06cf470ca229046eb5269c17a","url":"a/smSz51dt.js"},{"revision":"078dfcff9fe91c9c9f4dc1be5a351120","url":"a/t644j-xK.js"},{"revision":"7d3a474a58bc5d497936d14231aadedb","url":"a/tN4jXUuy.js"},{"revision":"6dba41f5e4d04dbe2a65e860ee47f9e2","url":"a/vCUAdYcf.css"},{"revision":"139b29ea946a62970aa75551bf4a453d","url":"a/wDZAPYP3.js"},{"revision":"b47183b7068002cbb2b972a44851d211","url":"a/zKEBhXCT.js"},{"revision":"68360ddd89a01c02cc75b3a354659c67","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"c45f1205ae6690ef3322397c00dbdf31","url":"manifest.webmanifest"}]||[],{url:"/build-metadata.json"}],o="0.0.35."+1761543113185,d=async(t,e=3,i=1e3)=>{for(let n=0;n<e;n++)try{const a=await fetch(t,{cache:"no-cache"});if(!a.ok)throw new Error(`Request failed with status ${a.status}`);return a}catch(a){if(n<e-1)await new Promise(s=>setTimeout(s,i));else throw a}},w=async()=>{(await caches.open(o)).addAll(f.map(e=>e.url))},m=async()=>{const t=await caches.keys();await Promise.allSettled(t.map(async e=>{o!==e&&await caches.delete(e)}))};let r=!1;self.addEventListener("install",t=>{t.waitUntil((async()=>{r=(await caches.keys()).length===0,w(),r&&self.skipWaiting()})())});self.addEventListener("activate",t=>{t.waitUntil((async()=>{await m(),r&&self.clients.claim()})())});const u=async t=>t.match("/index.html",{ignoreSearch:!0}),p=async t=>{if(t.request.method!=="GET")return fetch(t.request);const e=await caches.open(o),{pathname:i}=new URL(t.request.url),n=i==="/"?"/index.html":i,a=await e.match(n,{ignoreSearch:!0});if(a)return a;const s=t.request,h=s.mode==="navigate"||s.headers.get("accept")?.includes("text/html");try{const c=await d(s.url);return c.status===404&&s.method==="GET"&&h?await u(e)||c:(c.status===200&&await e.put(s,c.clone()),c)}catch(c){if(h){const l=await u(e);if(l)return l}throw c}};self.addEventListener("fetch",t=>{t.respondWith(p(t))});
