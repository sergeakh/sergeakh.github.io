const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"4a9d4a19d42d2740c53ff1f4d0707cf5","url":"a/3mTw8Xwm.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"ba7f28d542d46cb76f99855ff57437b8","url":"a/AVZyt2eV.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"a3c5c65d43bc2b894290e8ed9393cfa3","url":"a/B1IXcuHS.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"026f428a1157b9350c904fed4c05081d","url":"a/BE-rgYbo.js"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"90b9a9fbe9cdb5f8914082dd53ade1a4","url":"a/BF3BcKLf.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"d16f0f62ad6dd4822f2c0953a8dbc5f6","url":"a/Bp9D3vPJ.js"},{"revision":"17ff2ade3950a9a603e9032862c597e6","url":"a/BQW7NKwF.js"},{"revision":"77215ee8bd191282840f67c35dbf8551","url":"a/BX1i1Yct.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"446434c9806b4f1c7dcc7ac4d538f7a5","url":"a/C5nzfUQ6.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"71f9d991d77dfb7c12bb407e39a0ddbc","url":"a/CcBSKQsA.css"},{"revision":"8f17878df868816d22fa3d63669e37a0","url":"a/CNDMtsEn.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"9f8f9cab7b31b18211bd1a24bcb1cf50","url":"a/CrdrTXnd.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"50906a3edafee58838091a0f5d37ae12","url":"a/D1tvaBz-.js"},{"revision":"ff7355f7830af12bda83df1c3f7e5928","url":"a/D5LZ7AuQ.js"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"93b64e3930569a2253b6b4c939a9e29a","url":"a/DJa0MnNj.js"},{"revision":"8fe0670cba8aa01c2cdfff894c39130f","url":"a/DXcDp4SG.js"},{"revision":"64833cc1afb996ad159a8f66424e2173","url":"a/DzDg2sQy.js"},{"revision":"dea27a1816cf76714917cc300e9294c6","url":"a/eZ2Qin8M.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"81d1dd98ab8465492153c0ac4370422a","url":"a/hrpr5AIe.js"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"fcd302b7066eea99e7b868fbf75be2a7","url":"a/QJAFALJQ.js"},{"revision":"d8167f55b68321980ea26021a956d32c","url":"a/RqxSC1AO.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"25606127f4cf8c02d2cfa41c596b1a9d","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1758618330608,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
