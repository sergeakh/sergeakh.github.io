const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"9d6945b1f8679acff1c656bf0f6aa296","url":"a/3OECPnNl.js"},{"revision":"250567a377848854061a1c711a85ffbb","url":"a/5buBKAsG.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"af106e1582a822012322d147e04fd740","url":"a/B_5l_QvT.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"fa1c51b19473b8d7437645efdc0d74f6","url":"a/B8Oe_0yK.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"1dd3ea3b4f2942eb5f49b04981a082b8","url":"a/BfHRN4OB.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"2de583106127d2793cc3e52ea58674bc","url":"a/BMpuHJfb.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"6629942d4dec5b355bc8404d0cbde5ec","url":"a/Bso39p1d.css"},{"revision":"33d5da15f7d84a373db18dd61291a741","url":"a/BVpu07OB.js"},{"revision":"5e4bf27853c1d90ce88043060265922c","url":"a/C8A4sh5l.js"},{"revision":"8bb4daac91c4648b2d3a28c10cf58902","url":"a/Cc9A8c5q.js"},{"revision":"d37f2550b612c3d532a7296c39170cab","url":"a/CebV7XwJ.css"},{"revision":"0f57bef5694e3b854e8e59886322b7ab","url":"a/CIaT507M.js"},{"revision":"5b0ef597b94c68fc59a4f6b072396e88","url":"a/CjhdjYO4.css"},{"revision":"ff8e6a21f0c74d43272020fbd4e8c331","url":"a/CJLgQEIv.js"},{"revision":"05d65c1af3821be25b5fb3bdac07b312","url":"a/ClorWzJb.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"89a4e4caf7f6393f6f9a5a9fb9462502","url":"a/CS2H_5qt.js"},{"revision":"b9d41de15bbf0b0ae9a011f00453d522","url":"a/CTm390Vo.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"b79aa0763014f8ead271c80a7dcb9dde","url":"a/D1XOQvUl.js"},{"revision":"1dc5b2bedbfd11bd339de27ef659a622","url":"a/D5mnDQ30.css"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"86298910657bde3800160a87167791f8","url":"a/Dbk9vn6s.js"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"efae7104d90d680da07c5dad452918f5","url":"a/DkTuMGQL.js"},{"revision":"324506e1390cc9a55ecb99f842cb116c","url":"a/DoM3YEON.css"},{"revision":"aebff9667441ea53cd3bc4f529a8bec0","url":"a/DqjnanNX.js"},{"revision":"6aad192e1964c9b64cca83e1ac2e8901","url":"a/DS5IYZQM.js"},{"revision":"4d21e7e59b47183aadd81cde589d46ad","url":"a/H6_Ihf9h.css"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"f9fc8a466c01db398f3ff08da6f28506","url":"a/KR3KUO2b.js"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"e97b75b3624d4cf5acf9efca1567a8bc","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1760623113505,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
