const u=[{"revision":"053627e3f019ee49adcc813ebcf0cbaa","url":"a/0dEJLV1f.js"},{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"8b129d2998465d7e1f279f4f667edbc6","url":"a/4gzmSPsW.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"ca91434fae7b62e95f2cdc6bbdd555ee","url":"a/B5l296Fi.js"},{"revision":"ac0408ab87a58c9358e37f8407dd3be1","url":"a/B7lhXq9S.js"},{"revision":"ebe7dc22afcad4e69cec36049b706a50","url":"a/B8neLUb6.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"62e407a355134df57bcef422b9c8d68f","url":"a/BG-JZHmb.css"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"006607eecad56b65dca7fb8dcf5c93de","url":"a/BmJLultA.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"bedd84ccd098251bd662c2a6a15e96ee","url":"a/BTtUkV_W.css"},{"revision":"92508075b27570ef55551d04adcda53f","url":"a/C2tPnSMM.js"},{"revision":"5d1b76d2164fe2ffcee9b4db74643ff3","url":"a/C5u7fhZT.js"},{"revision":"5b0ef597b94c68fc59a4f6b072396e88","url":"a/CjhdjYO4.css"},{"revision":"9fc8c20b995b10821641179b551f51db","url":"a/CJX6sp9w.js"},{"revision":"6f2cf835da5c2078994d7fbdfb680b6f","url":"a/CL-06lTK.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"1f3f4942f689955d9806e84240efead0","url":"a/D_JAf1TB.js"},{"revision":"430105e507715541ecda766de10abf94","url":"a/d3HzJb4x.js"},{"revision":"1dc5b2bedbfd11bd339de27ef659a622","url":"a/D5mnDQ30.css"},{"revision":"cb5e90d2b3683b28fb1f67f46a440c05","url":"a/DAHSAoV2.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"0f6b8cc16c417c053c2eaf964ce8d0fd","url":"a/DCJew9xS.js"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"bda0bb0621db302e56fd312aab5a79e2","url":"a/DhGa8jrV.js"},{"revision":"b2f9ad2471921a9b40b6a05d32be0b62","url":"a/DKlmiKu5.js"},{"revision":"6268ee53f40c86d281f94ce6ad1f2744","url":"a/DoAxIeS1.js"},{"revision":"318e26b6e493afdee14cb1b11070d4c1","url":"a/DpQAdt9Q.js"},{"revision":"2e8e9bebee6549f5c35491c669a0e766","url":"a/DtIh40Vz.js"},{"revision":"6081f931e26e7841af45afbfe8465d79","url":"a/DVU90ypC.js"},{"revision":"07d476b38df314b0a3f43cbf37e2f518","url":"a/DWUfwQ_G.css"},{"revision":"6c93d9472ab7239b6308162affe19018","url":"a/Dz9AXCrV.css"},{"revision":"347d49b23c088d2c7cfd7dbb0a680c3e","url":"a/eLPqwcYE.js"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"c85927215ff6208eb768f9539160978f","url":"a/xIey50Qd.js"},{"revision":"4cd8fbbba3fcb492e3f9d313d1bddcb5","url":"a/XYzvZsT8.js"},{"revision":"9f46b1520c01bba29afdb9085ec3e236","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.5."+1761005060094,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
