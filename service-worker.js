const u=[{"revision":"499b956659f1f93220a124646e070c3a","url":"a/1JBO3KHP.css"},{"revision":"b58cf7153f00c9e0709f07f102e91566","url":"a/5llNvZVl.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"2a36439fb66ca0960b20bea7e7bb1c3b","url":"a/A07xSe-1.css"},{"revision":"89c1a23030c64e7d7588d7b632a56c48","url":"a/ahued5Xs.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"058ea9683f3d1c22fea1acc49176a15c","url":"a/B0cemaEl.css"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"b4b8c7e9d540100cf743ca08a946eb96","url":"a/BEGDcNQV.js"},{"revision":"d1ae8698c54e38563315bcb3e500a105","url":"a/BiYu47Ck.js"},{"revision":"5b97f4b071116c161342084357e9463f","url":"a/BJkY6727.css"},{"revision":"b39b5838a3edce38a8d8e27f1260f7f7","url":"a/BlSl-dr8.js"},{"revision":"16cd9f7e9112f3a6b1c338b6cd9c1d01","url":"a/BMfKSoq4.js"},{"revision":"3b77dcc3473faabe62dc687f45d19904","url":"a/BYiYfrGn.css"},{"revision":"519d3733c52356ede0aeacaa84bc3767","url":"a/C2_kz5eG.js"},{"revision":"7efe8563d55555d3474aaf05a7315321","url":"a/C2LQTvF4.js"},{"revision":"088ed230ddc4dc6e6a9a91c6315e3d08","url":"a/CBB22PtM.css"},{"revision":"c329833b1a76a9ad3d4926ea763c2cb0","url":"a/CcdXoQGt.js"},{"revision":"a08d1274ed9777f15d239ea593a1d4c6","url":"a/CEJrpvg5.js"},{"revision":"1f6bcb18bd5d6261e5012bb536059add","url":"a/CoBIEQkN.css"},{"revision":"b4475f19c149a6d5729bfca51a428af9","url":"a/COpK2wxh.js"},{"revision":"2fe9ab88ebf67a53920d8c738a3e47f4","url":"a/COPqNz9R.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"2fc67a0f345edf9b84bacef8fe92b758","url":"a/CSASqJJN.js"},{"revision":"b5d8e178c54ddca19826573622049ba4","url":"a/CTvV7MYb.css"},{"revision":"4b06cefc422070d764a637c7fba9123b","url":"a/CTZccJ9I.css"},{"revision":"51eeeb3dc2d167762c555537d3b88075","url":"a/CwLtx71M.css"},{"revision":"1e1894b689037ddfe59a400c6aa49ae2","url":"a/CXvYnT7R.js"},{"revision":"af3dade144aab9da5f02ebe0b328227a","url":"a/D0s4m_LM.css"},{"revision":"848f4483bdde5adfe4e96a396ac877cb","url":"a/DdvqrzuO.css"},{"revision":"34a04be95185c765eefad029cf3ef8d3","url":"a/DHPeW_IT.js"},{"revision":"1f83cb58ad8db8260e1af4ef32dbf866","url":"a/DibnPKmd.js"},{"revision":"580ecbc18deac3ae6f6bfb1fe9c0f9d9","url":"a/DJ8KnIIt.js"},{"revision":"b915d4f20e6183fac6cba7287768000e","url":"a/DMFFcAtF.js"},{"revision":"4832f1b9744a29da2e92cdc327562327","url":"a/DpfT6Qm5.js"},{"revision":"71a4ad7c8c733021fbb6adb30d550418","url":"a/DXdpZ9i5.js"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"d60dbc3f7b7d65700e12de85d5643352","url":"a/id8EQpim.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"23fc1735cbcb4ae666b13ce2d1bf6dfc","url":"a/wHiSqZiK.css"},{"revision":"f0d0a1aaaf8a00d9204ecc441a819918","url":"a/XvXAy9fo.js"},{"revision":"2a77b6b37028953a5a841ef45d101ea7","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"da6e3bad6b245af9423681eea3e97bc2","url":"manifest.webmanifest"}],r="0.0.3."+1758584337856,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
