const f=[{"revision":"b2a992ea4c0870960c0c19af0673870d","url":"a/4iDiQ5dP.js"},{"revision":"0d79f68fac516774d1d01abd17b05e09","url":"a/70bqyQ4Y.css"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"6ec6779cb5bb6c749c5ac06f4138a563","url":"a/B6PXMNdb.js"},{"revision":"f43e690a013276d2048e09fc726f8b4d","url":"a/B7UFnYhN.js"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"e3bbbae1a9615a0c12661001bbc97451","url":"a/BMwKOHd1.css"},{"revision":"63a618897c4145150e058c264cd1290e","url":"a/BowAtO7k.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"3f9760d063392c26a0ce8b7b5dc898c8","url":"a/BRl5iHgi.js"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"0b8c960cf5f0e7b0a2c782f573e71fb9","url":"a/BsKTjzsW.js"},{"revision":"f27a57ba4f53cb166272b11af568df46","url":"a/BTodTUiH.js"},{"revision":"71339bbe2cc1664c4517aebf17b64afd","url":"a/C-kAFuX8.js"},{"revision":"2bd7cacbe334cb015f8e407cb8d32a51","url":"a/C-Mx_t1i.css"},{"revision":"a317b5d3202bf791d292fe2a466cf0d2","url":"a/C2VuNxr3.css"},{"revision":"145e44e6032f2ce6f15e6c3102eed81e","url":"a/CDAKCE9d.js"},{"revision":"4c8c436df6c6242ede02900d86be556d","url":"a/CFeUDHPR.js"},{"revision":"da5404945aed069dadb078725da31d50","url":"a/Cff6q7FQ.js"},{"revision":"737e085c38d8480c03f059cc43e8c20e","url":"a/CJkK19aw.css"},{"revision":"945449c47f03be89202a53621cd414a1","url":"a/Ck5c6fD-.js"},{"revision":"8a43dfe425bfb2b1acbe8c2c27c895a3","url":"a/CMpOgsgS.js"},{"revision":"2108e91f47565bf644cadaa2c95fdd56","url":"a/CN1I3D0Z.js"},{"revision":"015917a083c52de471dbf3a9d6915255","url":"a/CnbNImSM.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"a34b2ba82f7bfe4df6e4beea9119292e","url":"a/DGvifczQ.js"},{"revision":"be69a22b738571ae4939d69a0b49e23b","url":"a/DjFlNKxu.js"},{"revision":"fd9b25a4f8fe0b8f0f6ced4549d13099","url":"a/DjFSRGVA.js"},{"revision":"211ea52ff63aac93f258d2b9884cdb9d","url":"a/DJGxTJuX.css"},{"revision":"ce6dafa205891fc6f0406d3ed0a89a79","url":"a/DlxBpJjD.css"},{"revision":"dadbae2f84e97438e2c9e82e18970911","url":"a/DoivkJcU.css"},{"revision":"97dd5ed950c3e7b8325d1e40bac3c927","url":"a/DqjzHE2f.js"},{"revision":"a15b3f894541ee9485366194718cb919","url":"a/DvKBvSFJ.js"},{"revision":"07d476b38df314b0a3f43cbf37e2f518","url":"a/DWUfwQ_G.css"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"33f3702c4c5c10d65cb9eb598243b579","url":"a/kaJTCbHk.js"},{"revision":"e748f416f340c40c12c2a12b9c2b3edd","url":"a/rbEnZeeC.js"},{"revision":"027ebba6c046901920312f7898b88810","url":"a/rNq0KAwZ.js"},{"revision":"f10543bb5a935b140252345e462ab354","url":"a/v2FlQxNj.js"},{"revision":"fd18ecd82820975e08daefe61e00d4a1","url":"a/W0DzQxYc.js"},{"revision":"d8d3b66824792c5d461e91686a60a29d","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"c45f1205ae6690ef3322397c00dbdf31","url":"manifest.webmanifest"}]||[],o="0.0.34."+1761541093559,w=async(t,e=3,i=1e3)=>{for(let n=0;n<e;n++)try{const a=await fetch(t,{cache:"no-cache"});if(!a.ok)throw new Error(`Request failed with status ${a.status}`);return a}catch(a){if(n<e-1)await new Promise(s=>setTimeout(s,i));else throw a}},d=async()=>{(await caches.open(o)).addAll(f.map(e=>e.url))},m=async()=>{const t=await caches.keys();await Promise.allSettled(t.map(async e=>{o!==e&&await caches.delete(e)}))};let r=!1;self.addEventListener("install",t=>{t.waitUntil((async()=>{r=(await caches.keys()).length===0,d(),r&&self.skipWaiting()})())});self.addEventListener("activate",t=>{t.waitUntil((async()=>{await m(),r&&self.clients.claim()})())});const u=async t=>t.match("/index.html",{ignoreSearch:!0}),p=async t=>{if(t.request.method!=="GET")return fetch(t.request);const e=await caches.open(o),{pathname:i}=new URL(t.request.url),n=i==="/"?"/index.html":i,a=await e.match(n,{ignoreSearch:!0});if(a)return a;const s=t.request,h=s.mode==="navigate"||s.headers.get("accept")?.includes("text/html");try{const c=await w(s.url);return c.status===404&&s.method==="GET"&&h?await u(e)||c:(c.status===200&&await e.put(s,c.clone()),c)}catch(c){if(h){const l=await u(e);if(l)return l}throw c}};self.addEventListener("fetch",t=>{t.respondWith(p(t))});
