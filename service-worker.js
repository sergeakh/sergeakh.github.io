const u=[{"revision":"f88bc9a7aecdba44e68c2010f674f7cf","url":"a/0ljvtUtZ.js"},{"revision":"1fe1c513f04392f445c382f578dc234a","url":"a/6JNDBm4W.js"},{"revision":"326167002abe53d14618cc83c32aa2e8","url":"a/9q_jSmK4.js"},{"revision":"d079e84408d902946d2660029d63b5d9","url":"a/B_UsPGEu.css"},{"revision":"d754f9f8b1556b6ed18a427d45c8c3c4","url":"a/B_Zcg-eh.css"},{"revision":"9acaa0d2f2863fa7f47e7cf2e0095ae8","url":"a/bA9hIFUQ.js"},{"revision":"016e78d49944cb03bf2ba643db04c510","url":"a/BAW-HnOs.css"},{"revision":"719d60d24f28492a7346d2f147edc776","url":"a/Bib31qW-.css"},{"revision":"b24412a345717948d7931709bfae34b1","url":"a/BMbFbwjy.js"},{"revision":"b73618a05458d76ed89670738ba02a84","url":"a/BmjUsL3X.js"},{"revision":"76863013d0b10fc5f2b38589fcb15d2e","url":"a/BMjxyC5e.css"},{"revision":"f2554aadf6c36c1638edd25ef610227c","url":"a/BoBp-Kq4.js"},{"revision":"2e585b72ca298d7499937efd7e0a3020","url":"a/Br15UghP.css"},{"revision":"d11fd4850373f822021224d95023e321","url":"a/Bs6Vrlio.css"},{"revision":"ea89d176fb1d3b33f6bf48a4ee1b2202","url":"a/BSkDUwU8.js"},{"revision":"921b4f3047d50c510e07869880c1282c","url":"a/BXzlYwkm.js"},{"revision":"0227be78e2eddd0a541a00b813756d10","url":"a/C1eVIBBD.css"},{"revision":"9225a0564bb7b49bebf1adbb96c1ad3d","url":"a/CCtlgutt.css"},{"revision":"737e085c38d8480c03f059cc43e8c20e","url":"a/CJkK19aw.css"},{"revision":"12b6fd886549d74dd4689f77ba219826","url":"a/CMaqE-Ah.js"},{"revision":"9b2f0ad5e5dad277e492f360ab66e4b1","url":"a/Cn4RkZHW.js"},{"revision":"c39f550b89551baaf5521a5114285a80","url":"a/CP98egSH.js"},{"revision":"037e600d5e80b0356ec7e2b5ed72b95b","url":"a/Cpa8lgv9.js"},{"revision":"b2aa98d8751d8aa8eb92c8672a8504f7","url":"a/CTzb1Nvm.css"},{"revision":"a3baba32e1ab5c95b4f107ca455b9da4","url":"a/CVXJmRHV.js"},{"revision":"5718a41e5420e8544d158748f4f7c2e7","url":"a/D6NXSTtF.js"},{"revision":"ad5236e04bb7c36eb60e6456c067d007","url":"a/DaxC3cdO.css"},{"revision":"7e99ac4a63db864dcaa5796adf8eb2d4","url":"a/Df0fAQHq.css"},{"revision":"362e8196db1cce422914d3e0bf6e96db","url":"a/DFYUhMFp.js"},{"revision":"812150ba45aed06009736e52b1c3378b","url":"a/DgPIJwnn.css"},{"revision":"ce6dafa205891fc6f0406d3ed0a89a79","url":"a/DlxBpJjD.css"},{"revision":"73aa1b136ee2891ba63be5ca9d7e1078","url":"a/DrA5Kb8v.js"},{"revision":"d683545b46b845dca7c37923251594ae","url":"a/DuP3daqO.js"},{"revision":"9ee445b6bc398c30bec4ecde3c0062af","url":"a/DwerDdQw.js"},{"revision":"14dd8beeee9ab3be2d758f5e87f8b694","url":"a/DYSofeW4.js"},{"revision":"c73ccce2e2b1b971a8803dec052ae116","url":"a/DZNlfyYK.css"},{"revision":"b1f1bce21d34e10c1e14926bac570a63","url":"a/EZ_l8VDb.css"},{"revision":"95e92da9771f64fbae9bd7bd886b2152","url":"a/GKJynjgv.css"},{"revision":"e2a02a40d7774ab181eab8113d009ee5","url":"a/HOTUjnfJ.css"},{"revision":"c00e895376e04d2f491a9069745fad48","url":"a/hu7yjlv8.css"},{"revision":"80849e2d2700c74c05dead86ab6b931b","url":"a/j0KFa_-O.css"},{"revision":"640beb79d26bd9219d1aef394afae1b2","url":"a/lz2xlrBP.js"},{"revision":"a8811b32a6a288d73a3babc63d6bb3d1","url":"a/olfxBLLB.js"},{"revision":"3a7b75f55f90e383de406d2aeca849ed","url":"a/sesvG-qW.js"},{"revision":"a930ff6ed4e070acbe1104a2361b7629","url":"a/ShO_yPUW.js"},{"revision":"069ec65e8f3356caadc9b60bf72982af","url":"a/ZaAnkeak.js"},{"revision":"0437c78e4a9f89b9124bceb026c71cfe","url":"index.html"},{"revision":"38013143dc2183340ede8bc1c5124507","url":"registerSW.js"},{"revision":"72bfc92074c4057ec02457d71234e987","url":"add.svg"},{"revision":"e0bb08e3f2cf3c232c1a6d46d7db219d","url":"icon-192.png"},{"revision":"a3d6bc1ed7d7d3b6fa6fe7bf9dafc4c4","url":"icon-512.png"},{"revision":"63f2a5682e5ac6301a52c8ac2be9bba4","url":"icon-mask.png"},{"revision":"c45f1205ae6690ef3322397c00dbdf31","url":"manifest.webmanifest"}],r="0.0.20."+1761179645470,d=async()=>{const t=await caches.open(r);await Promise.all(u.map(async e=>{const a=new URL(e.url,location.href);e.revision&&a.searchParams.append("__WB_REVISION",e.revision);const s=await caches.match(a);s?await t.put(a,s.clone()):await t.add(a)}))};self.addEventListener("install",async()=>{await d()});self.addEventListener("activate",async()=>{const t=await caches.keys();await Promise.all(t.map(async e=>{r!==e&&await caches.delete(e)}))});const l=async t=>t.match("/index.html",{ignoreSearch:!0}),w=async t=>{const e=await caches.open(r),{pathname:a}=new URL(t.request.url),s=a==="/"?"/index.html":a,i=await e.match(s,{ignoreSearch:!0});if(i)return i;const n=t.request.clone(),o=n.headers.get("accept")?.includes("text/html");try{const c=await fetch(t.request);return c.status===404&&n.method==="GET"&&o?await l(e)||c:(c.status===200&&await e.put(n,c.clone()),c)}catch(c){if(o){const h=await l(e);if(h)return h}throw c}};self.addEventListener("fetch",t=>{t.respondWith(w(t))});
